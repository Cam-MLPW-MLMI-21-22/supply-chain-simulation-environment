DEBUG:scse.profiles.profile:Open profile file = /Users/kcollins/supply-chain-simulation-environment/src/scse/profiles/national_grid_profile.json.
DEBUG:matplotlib:matplotlib data path: /Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data
DEBUG:matplotlib:CONFIGDIR=/Users/kcollins/.matplotlib
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is darwin
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'posix', '_thread', '_weakref', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', 'scse', 'scse.default_run_parameters', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', '_weakrefset', 'weakref', 'copy', '_opcode', 'opcode', 'dis', 'collections.abc', 'token', 'tokenize', 'linecache', 'inspect', 'dataclasses', 'scse.default_run_parameters.core_default_run_parameters', 'scse.default_run_parameters.national_grid_default_run_parameters', 'loop', 'scse.api', 'scse.api.simulation', 'scse.main', 'scse.main.notebook_interface', 'scse.controller', 'traceback', '_string', 'string', 'threading', 'atexit', 'logging', 'networkx.exception', '_uuid', 'uuid', 'networkx.utils.misc', 'fnmatch', 'ntpath', 'errno', 'urllib', 'urllib.parse', 'pathlib', '_struct', 'struct', 'zlib', '_compression', 'gzip', '_bz2', 'bz2', 'networkx.utils.decorators', 'networkx.utils.random_sequence', 'networkx.utils.union_find', 'networkx.utils.rcm', 'networkx.utils.heaps', 'networkx.utils.contextmanagers', 'networkx.utils', 'networkx.classes.coreviews', 'networkx.classes.reportviews', 'networkx.convert', 'networkx.classes.graph', 'networkx.classes.digraph', 'networkx.classes.multigraph', 'networkx.classes.multidigraph', 'networkx.classes.ordered', 'networkx.classes.filters', 'networkx.classes.graphviews', 'networkx.classes.function', 'networkx.classes', 'networkx.convert_matrix', 'networkx.relabel', 'networkx.generators.atlas', 'networkx.generators.classic', 'networkx.generators.cographs', 'math', 'networkx.generators.community', 'networkx.generators.degree_seq', 'numbers', 'networkx.generators.directed', 'networkx.generators.duplication', 'networkx.generators.ego', 'networkx.generators.expanders', '_bisect', 'bisect', 'networkx.generators.geometric', 'networkx.generators.internet_as_graphs', 'networkx.generators.intersection', 'networkx.generators.interval_graph', 'networkx.generators.joint_degree_seq', 'networkx.generators.lattice', 'networkx.generators.line', 'networkx.generators.mycielski', 'networkx.generators.nonisomorphic_trees', 'networkx.generators.random_clustered', 'networkx.generators.random_graphs', 'networkx.generators.small', 'networkx.generators.social', 'networkx.generators.sudoku', 'networkx.generators.spectral_graph_forge', 'networkx.generators.stochastic', 'networkx.generators.trees', 'networkx.generators.triads', 'networkx.generators', 'networkx.readwrite.adjlist', 'networkx.readwrite.multiline_adjlist', 'networkx.readwrite.edgelist', '_compat_pickle', '_pickle', 'pickle', 'networkx.readwrite.gpickle', 'networkx.readwrite.pajek', 'networkx.readwrite.leda', 'networkx.readwrite.graph6', 'networkx.readwrite.sparse6', '_ast', 'ast', 'typing.io', 'typing.re', 'typing', 'html.entities', 'html', 'networkx.readwrite.gml', 'networkx.readwrite.graphml', 'xml', 'xml.etree', 'xml.etree.ElementPath', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', '_elementtree', 'xml.etree.ElementTree', 'networkx.readwrite.gexf', 'networkx.readwrite.nx_shp', 'networkx.readwrite.json_graph.node_link', 'networkx.readwrite.json_graph.adjacency', 'networkx.readwrite.json_graph.tree', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'networkx.readwrite.json_graph.jit', 'networkx.readwrite.json_graph.cytoscape', 'networkx.readwrite.json_graph', 'networkx.readwrite.text', 'networkx.readwrite', 'networkx.algorithms.assortativity.connectivity', 'networkx.algorithms.assortativity.pairs', 'networkx.algorithms.assortativity.mixing', 'networkx.algorithms.assortativity.correlation', 'networkx.algorithms.assortativity.neighbor_degree', 'networkx.algorithms.assortativity', 'networkx.algorithms.asteroidal', 'networkx.algorithms.boundary', 'networkx.algorithms.bridges', 'networkx.algorithms.chains', 'networkx.algorithms.centrality.betweenness', 'networkx.algorithms.centrality.betweenness_subset', 'networkx.algorithms.centrality.closeness', 'networkx.algorithms.centrality.subgraph_alg', 'networkx.algorithms.centrality.flow_matrix', 'networkx.algorithms.centrality.current_flow_closeness', 'networkx.algorithms.centrality.current_flow_betweenness', 'networkx.algorithms.centrality.current_flow_betweenness_subset', 'networkx.algorithms.centrality.degree_alg', 'networkx.algorithms.centrality.dispersion', 'networkx.algorithms.centrality.eigenvector', 'networkx.algorithms.centrality.group', 'networkx.algorithms.centrality.harmonic', 'networkx.algorithms.centrality.katz', 'networkx.algorithms.centrality.load', 'networkx.algorithms.centrality.reaching', 'networkx.algorithms.centrality.percolation', 'networkx.algorithms.centrality.second_order', 'networkx.algorithms.centrality.trophic', 'networkx.algorithms.centrality.voterank_alg', 'networkx.algorithms.centrality', 'networkx.algorithms.components.connected', 'networkx.algorithms.components.strongly_connected', 'networkx.algorithms.components.weakly_connected', 'networkx.algorithms.components.attracting', 'networkx.algorithms.components.biconnected', 'networkx.algorithms.components.semiconnected', 'networkx.algorithms.components', 'networkx.algorithms.chordal', 'networkx.algorithms.cluster', 'networkx.algorithms.clique', 'networkx.algorithms.communicability_alg', 'networkx.algorithms.coloring.greedy_coloring_with_interchange', 'networkx.algorithms.coloring.greedy_coloring', 'networkx.algorithms.coloring.equitable_coloring', 'networkx.algorithms.coloring', 'networkx.algorithms.core', 'networkx.algorithms.covering', 'networkx.algorithms.cycles', 'networkx.algorithms.cuts', 'networkx.algorithms.d_separation', 'networkx.algorithms.dag', 'networkx.algorithms.distance_measures', 'networkx.algorithms.distance_regular', 'networkx.algorithms.dominance', 'networkx.algorithms.dominating', 'networkx.algorithms.efficiency_measures', 'networkx.algorithms.euler', 'networkx.algorithms.graphical', 'networkx.algorithms.hierarchy', 'networkx.algorithms.hybrid', 'networkx.algorithms.link_analysis.pagerank_alg', 'networkx.algorithms.link_analysis.hits_alg', 'networkx.algorithms.link_analysis', 'networkx.algorithms.link_prediction', 'networkx.algorithms.lowest_common_ancestors', 'networkx.algorithms.isolate', 'networkx.algorithms.matching', 'networkx.algorithms.minors.contraction', 'networkx.algorithms.minors', 'networkx.algorithms.mis', 'networkx.algorithms.moral', 'networkx.algorithms.non_randomness', 'networkx.algorithms.operators.all', 'networkx.algorithms.operators.binary', 'networkx.algorithms.operators.product', 'networkx.algorithms.operators.unary', 'networkx.algorithms.operators', 'networkx.algorithms.planarity', 'networkx.algorithms.planar_drawing', 'networkx.algorithms.reciprocity', 'networkx.algorithms.regular', 'networkx.algorithms.richclub', 'networkx.algorithms.shortest_paths.generic', 'networkx.algorithms.shortest_paths.unweighted', 'networkx.algorithms.shortest_paths.weighted', 'networkx.algorithms.shortest_paths.astar', 'networkx.algorithms.shortest_paths.dense', 'networkx.algorithms.shortest_paths', 'networkx.algorithms.similarity', '_hashlib', '_blake2', '_sha3', 'hashlib', 'networkx.algorithms.graph_hashing', 'networkx.algorithms.simple_paths', 'networkx.algorithms.smallworld', 'networkx.algorithms.smetric', 'networkx.algorithms.structuralholes', 'networkx.algorithms.sparsifiers', 'networkx.algorithms.summarization', 'networkx.algorithms.swap', 'networkx.algorithms.traversal.breadth_first_search', 'networkx.algorithms.traversal.beamsearch', 'networkx.algorithms.traversal.depth_first_search', 'networkx.algorithms.traversal.edgedfs', 'networkx.algorithms.traversal.edgebfs', 'networkx.algorithms.traversal', '_sha512', '_random', 'random', 'networkx.algorithms.triads', 'networkx.algorithms.vitality', 'networkx.algorithms.voronoi', 'networkx.algorithms.wiener', 'networkx.algorithms.approximation.clustering_coefficient', 'networkx.algorithms.approximation.ramsey', 'networkx.algorithms.approximation.clique', 'networkx.algorithms.approximation.connectivity', 'networkx.algorithms.approximation.distance_measures', 'networkx.algorithms.approximation.dominating_set', 'networkx.algorithms.approximation.kcomponents', 'networkx.algorithms.approximation.matching', 'networkx.algorithms.approximation.steinertree', 'networkx.algorithms.approximation.traveling_salesman', 'networkx.algorithms.approximation.treewidth', 'networkx.algorithms.approximation.vertex_cover', 'networkx.algorithms.approximation.maxcut', 'networkx.algorithms.approximation', 'networkx.algorithms.bipartite.basic', 'networkx.algorithms.bipartite.centrality', 'networkx.algorithms.bipartite.cluster', 'networkx.algorithms.bipartite.matrix', 'networkx.algorithms.bipartite.matching', 'networkx.algorithms.bipartite.covering', 'networkx.algorithms.bipartite.edgelist', 'networkx.algorithms.bipartite.projection', 'networkx.algorithms.bipartite.redundancy', 'networkx.algorithms.bipartite.spectral', 'networkx.algorithms.bipartite.generators', 'networkx.algorithms.bipartite', 'networkx.algorithms.node_classification.utils', 'networkx.algorithms.node_classification.hmn', 'networkx.algorithms.node_classification.lgc', 'networkx.algorithms.node_classification', 'networkx.algorithms.community.asyn_fluid', 'networkx.algorithms.community.centrality', 'networkx.algorithms.community.kclique', 'networkx.algorithms.community.community_utils', 'networkx.algorithms.community.kernighan_lin', 'networkx.algorithms.community.label_propagation', 'networkx.algorithms.community.lukes', 'networkx.algorithms.community.quality', 'networkx.utils.mapped_queue', 'networkx.algorithms.community.modularity_max', 'networkx.algorithms.community', 'networkx.algorithms.flow.utils', 'networkx.algorithms.flow.boykovkolmogorov', 'networkx.algorithms.flow.dinitz_alg', 'networkx.algorithms.flow.edmondskarp', 'networkx.algorithms.flow.preflowpush', 'networkx.algorithms.flow.shortestaugmentingpath', 'networkx.algorithms.flow.maxflow', 'networkx.algorithms.flow.mincost', 'networkx.algorithms.flow.gomory_hu', 'networkx.algorithms.flow.capacityscaling', 'networkx.algorithms.flow.networksimplex', 'networkx.algorithms.flow', 'networkx.algorithms.isomorphism.isomorph', 'networkx.algorithms.isomorphism.isomorphvf2', 'networkx.algorithms.isomorphism.vf2userfunc', 'networkx.algorithms.isomorphism.matchhelpers', 'networkx.algorithms.isomorphism.temporalisomorphvf2', 'networkx.algorithms.isomorphism.ismags', 'networkx.algorithms.isomorphism.tree_isomorphism', 'networkx.algorithms.isomorphism', 'networkx.algorithms.tournament', 'networkx.algorithms.tree.recognition', 'networkx.algorithms.tree.branchings', 'networkx.algorithms.tree.coding', 'networkx.algorithms.tree.mst', 'networkx.algorithms.tree.operations', 'networkx.algorithms.tree.decomposition', 'networkx.algorithms.tree', 'networkx.algorithms.connectivity.utils', 'networkx.algorithms.connectivity.connectivity', 'networkx.algorithms.connectivity.cuts', 'networkx.algorithms.connectivity.edge_augmentation', 'networkx.algorithms.connectivity.edge_kcomponents', 'networkx.algorithms.connectivity.disjoint_paths', 'networkx.algorithms.connectivity.kcomponents', 'networkx.algorithms.connectivity.kcutsets', 'networkx.algorithms.connectivity.stoerwagner', 'networkx.algorithms.connectivity', 'networkx.algorithms', 'networkx.linalg.attrmatrix', 'networkx.linalg.spectrum', 'networkx.linalg.graphmatrix', 'networkx.linalg.laplacianmatrix', 'networkx.linalg.algebraicconnectivity', 'networkx.linalg.modularitymatrix', 'networkx.linalg.bethehessianmatrix', 'networkx.linalg', 'networkx.testing.utils', 'networkx.testing.test', 'networkx.testing', 'networkx.drawing.layout', 'networkx.drawing.nx_pylab', '_lzma', 'lzma', 'pwd', 'grp', 'shutil', 'tempfile', 'networkx.drawing.nx_agraph', 'locale', 'networkx.drawing.nx_pydot', 'networkx.drawing', 'networkx', '_datetime', 'datetime', 'scse.api.module', 'scse.utils', 'scse.utils.printer', 'scse.utils.uuid', 'scse.services', 'scse.services.service_registry', 'scse.profiles', 'scse.profiles.profile', 'scse.constants', 'scse.constants.national_grid_constants', 'scse.controller.miniscot', 'scse.metrics', '_csv', 'csv', 'scse.metrics.national_grid_cash_accounting', 'scse.modules', 'scse.modules.selection', 'scse.modules.selection.national_grid_selection', 'scse.modules.topology', 'scse.modules.topology.national_grid_network_dynamic', 'scse.modules.customer', 'scse.modules.customer.national_grid_demand', 'scse.services.electricity_demand_forecast_service', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', '__future__', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'platform', 'signal', '_posixsubprocess', 'select', 'selectors', 'subprocess', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'textwrap', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_24', 'numpy.random._common', 'binascii', 'base64', 'hmac', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'GPy', 'GPy.core', 'paramz.util', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib.decorator', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy._lib.messagestream', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'socket', '_ssl', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', 'difflib', 'pprint', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'gettext', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.linalg.lapack_lite', 'numpy.testing._private.utils', 'sysconfig', 'shlex', 'distutils', 'distutils.errors', 'distutils.debug', 'distutils.log', 'distutils.spawn', 'distutils.file_util', 'distutils.dir_util', 'distutils.dep_util', 'distutils.util', 'distutils.ccompiler', 'distutils.sysconfig', 'distutils.version', 'glob', 'multiprocessing.process', 'array', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', 'numpy.distutils.misc_util', 'numpy.distutils.log', 'numpy.distutils.exec_command', 'numpy.distutils.ccompiler', '_osx_support', 'distutils.unixccompiler', 'numpy.distutils.unixccompiler', 'configparser', 'numpy.distutils.npy_pkg_config', 'numpy.distutils.__config__', 'numpy.distutils', 'numpy.testing._private.extbuild', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'paramz.optimization.scg', 'paramz.optimization.optimization', 'paramz.optimization.verbose_optimization', 'paramz.optimization', 'paramz.core.lists_and_dicts', 'paramz.core.index_operations', 'paramz.core.observable', 'paramz.core.pickleable', 'paramz.core.observable_array', 'paramz.domains', 'paramz.transformations', 'paramz.core.parentable', 'paramz.core.gradcheckable', 'paramz.core.nameable', 'paramz.core.updateable', 'paramz.core.indexable', 'paramz.core.constrainable', 'decorator', 'paramz.caching', 'paramz.core.parameter_core', 'paramz.core', 'six', 'paramz.parameterized', 'paramz.model', 'paramz.param', 'paramz.examples.ridge_regression', 'paramz.examples', 'paramz.__version__', 'paramz', 'GPy.core.parameterization.priorizable', 'GPy.core.parameterization.param', 'GPy.core.parameterization.parameterized', 'GPy.core.parameterization.transformations', 'GPy.core.parameterization', 'GPy.core.model', 'GPy.core.gp', 'GPy.core.parameterization.variational', 'GPy.core.mapping', 'GPy.likelihoods', 'GPy.likelihoods.bernoulli', 'GPy.util', 'GPy.util.config', 'GPy.util.linalg_cython', 'GPy.util.linalg', 'GPy.util.misc', 'GPy.util.squashers', 'GPy.util.warping_functions', 'scipy._lib.doccer', 'scipy.io.matlab.byteordercodes', 'scipy.io.matlab.miobase', 'scipy.io.matlab.mio_utils', 'scipy.io.matlab.mio4', 'scipy.io.matlab.streams', 'scipy.io.matlab.mio5_params', 'scipy.io.matlab.mio5_utils', 'scipy.io.matlab.mio5', 'scipy.io.matlab.mio', 'scipy.io.matlab', 'mmap', 'scipy.io.netcdf', 'scipy.io._fortran', 'scipy.io.mmio', 'scipy.io.idl', 'scipy.io.harwell_boeing._fortran_format_parser', 'scipy.io.harwell_boeing.hb', 'scipy.io.harwell_boeing', 'scipy.io', 'zipfile', 'tarfile', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'ipython_genutils._version', 'ipython_genutils', 'ipython_genutils.encoding', 'ipython_genutils.py3compat', 'ipython_genutils.path', 'traitlets.config.loader', 'ipython_genutils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'pkgutil', '_sysconfigdata__darwin_darwin', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'termios', 'tty', 'pty', 'fcntl', 'resource', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'getpass', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', 'runpy', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', '_queue', 'queue', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', '_scproxy', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'GPy.util.datasets', 'GPy.util.mocap', 'GPy.util.decorators', 'GPy.util.classification', 'GPy.util.subarray_and_sorting', 'GPy.util.diag', 'GPy.util.initialization', 'GPy.util.pca', 'pylab', 'matplotlib', 'packaging.__about__', 'packaging', 'packaging._structures', 'packaging._typing', 'packaging.version', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._version', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'six.moves', 'cycler', 'matplotlib.rcsetup', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=/Users/kcollins/.matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from /Users/kcollins/.matplotlib/fontlist-v330.json
DEBUG:matplotlib.pyplot:Loaded backend macosx version unknown.
DEBUG:matplotlib.pyplot:Loaded backend MacOSX version unknown.
DEBUG:scse.services.electricity_demand_forecast_service:Initializing electricity demand forecast service.
DEBUG:scse.services.electricity_supply_forecast_service:Initializing electricity supply forecast service.
DEBUG:scse.controller.miniscot:Getting context from Env: asin_list.
DEBUG:scse.modules.selection.national_grid_selection:Electricity sources selected = ['Solar', 'Wind Onshore', 'Fossil Gas', 'electricity'].
DEBUG:scse.controller.miniscot:Getting context from Env: network.
DEBUG:scse.controller.miniscot:Getting initial state from Env: asin_list.
DEBUG:scse.controller.miniscot:Getting initial state from Env: network.
DEBUG:scse.controller.miniscot:Resetting Agent: constant_demand.
DEBUG:scse.controller.miniscot:Resetting Agent: fulfiller.
DEBUG:scse.controller.miniscot:Resetting Agent: vendor.
DEBUG:scse.controller.miniscot:Resetting Agent: store_excess_supply.
DEBUG:scse.controller.miniscot:Resetting Agent: balance_excess_supply.
DEBUG:scse.controller.miniscot:Resetting Agent: battery_drawdown.
DEBUG:scse.controller.miniscot:Resetting Agent: balance_excess_demand.
DEBUG:scse.controller.miniscot:trying to reset signed-in services
DEBUG:scse.services.electricity_demand_forecast_service:Resetting electricity demand forecast service.
DEBUG:scse.services.electricity_supply_forecast_service:Resetting electricity supply forecast service.
INFO:numexpr.utils:Note: NumExpr detected 16 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
INFO:numexpr.utils:NumExpr defaulting to 8 threads.
Network Param Scenario: Baseline (20 % Discount), Surge Scenario: solar

Wind: 1.0, Solar: 0.1

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:22, 50.43s/it]  7%|▋         | 2/30 [00:50<09:46, 20.96s/it] 10%|█         | 3/30 [00:51<05:13, 11.59s/it] 13%|█▎        | 4/30 [00:51<03:07,  7.23s/it] 17%|█▋        | 5/30 [00:52<01:58,  4.74s/it] 20%|██        | 6/30 [01:42<08:10, 20.44s/it] 23%|██▎       | 7/30 [01:43<05:20, 13.96s/it] 27%|██▋       | 8/30 [01:44<03:35,  9.78s/it] 30%|███       | 9/30 [01:45<02:27,  7.03s/it] 33%|███▎      | 10/30 [01:46<01:42,  5.13s/it] 37%|███▋      | 11/30 [02:37<06:05, 19.26s/it] 40%|████      | 12/30 [02:38<04:07, 13.74s/it] 43%|████▎     | 13/30 [02:40<02:50, 10.03s/it] 47%|████▋     | 14/30 [02:41<01:58,  7.43s/it] 50%|█████     | 15/30 [02:43<01:24,  5.63s/it] 53%|█████▎    | 16/30 [03:36<04:40, 20.07s/it] 57%|█████▋    | 17/30 [03:37<03:07, 14.40s/it] 60%|██████    | 18/30 [03:39<02:07, 10.61s/it] 63%|██████▎   | 19/30 [03:41<01:28,  8.03s/it] 67%|██████▋   | 20/30 [03:43<01:01,  6.17s/it] 70%|███████   | 21/30 [04:36<03:00, 20.08s/it] 73%|███████▎  | 22/30 [04:37<01:56, 14.50s/it] 77%|███████▋  | 23/30 [04:40<01:17, 11.03s/it] 80%|████████  | 24/30 [04:43<00:51,  8.52s/it] 83%|████████▎ | 25/30 [04:45<00:33,  6.63s/it] 87%|████████▋ | 26/30 [05:38<01:22, 20.52s/it] 90%|█████████ | 27/30 [05:40<00:44, 14.89s/it] 93%|█████████▎| 28/30 [05:42<00:22, 11.19s/it] 97%|█████████▋| 29/30 [05:45<00:08,  8.66s/it]100%|██████████| 30/30 [05:46<00:00,  6.48s/it]100%|██████████| 30/30 [05:46<00:00, 11.56s/it]
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 5.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 5.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansShavian-Regular.ttf', name='Noto Sans Shavian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArabicUIDisplay.ttc', name='.Arabic UI Display', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOgham-Regular.ttf', name='Noto Sans Ogham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRunic-Regular.ttf', name='Noto Sans Runic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArabicUIText.ttc', name='.Arabic UI Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to Arial ('/System/Library/Fonts/Supplemental/Arial.ttf') with score of 0.050000.
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[265]
 [265]
 [265]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 347.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:49<01:39, 49.93s/it]100%|██████████| 3/3 [00:49<00:00, 16.66s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [265], Y: [7971634.79938205], extra_outputs: {}), UserFunctionResult(X: [265], Y: [7971634.79938205], extra_outputs: {}), UserFunctionResult(X: [265], Y: [7971634.79938205], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[0]
 [0]
 [0]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:46<01:33, 46.71s/it] 67%|██████▋   | 2/3 [00:46<00:19, 19.31s/it]100%|██████████| 3/3 [00:46<00:00, 15.62s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [0], Y: [8031665.65], extra_outputs: {}), UserFunctionResult(X: [0], Y: [8031665.65], extra_outputs: {}), UserFunctionResult(X: [0], Y: [8031665.65], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=13.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 5.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 5.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansShavian-Regular.ttf', name='Noto Sans Shavian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArabicUIDisplay.ttc', name='.Arabic UI Display', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOgham-Regular.ttf', name='Noto Sans Ogham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRunic-Regular.ttf', name='Noto Sans Runic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArabicUIText.ttc', name='.Arabic UI Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=13.0 to Arial ('/System/Library/Fonts/Supplemental/Arial.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 5.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 5.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansShavian-Regular.ttf', name='Noto Sans Shavian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArabicUIDisplay.ttc', name='.Arabic UI Display', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOgham-Regular.ttf', name='Noto Sans Ogham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRunic-Regular.ttf', name='Noto Sans Runic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArabicUIText.ttc', name='.Arabic UI Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to Arial ('/System/Library/Fonts/Supplemental/Arial.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 5.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 5.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/kcollins/opt/anaconda3/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansShavian-Regular.ttf', name='Noto Sans Shavian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArabicUIDisplay.ttc', name='.Arabic UI Display', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOgham-Regular.ttf', name='Noto Sans Ogham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRunic-Regular.ttf', name='Noto Sans Runic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArabicUIText.ttc', name='.Arabic UI Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to Arial ('/System/Library/Fonts/Supplemental/Arial.ttf') with score of 0.050000.

successfully ran loop


Best: [275.86206897], Val: 7971541.770754959

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: solar

Wind: 1.0, Solar: 0.5

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:33, 50.80s/it]  7%|▋         | 2/30 [00:51<09:54, 21.22s/it] 10%|█         | 3/30 [00:51<05:16, 11.73s/it] 13%|█▎        | 4/30 [00:52<03:08,  7.25s/it] 17%|█▋        | 5/30 [00:52<02:00,  4.81s/it] 20%|██        | 6/30 [01:44<08:17, 20.72s/it] 23%|██▎       | 7/30 [01:45<05:27, 14.26s/it] 27%|██▋       | 8/30 [01:45<03:39,  9.98s/it] 30%|███       | 9/30 [01:46<02:29,  7.12s/it] 33%|███▎      | 10/30 [01:48<01:45,  5.29s/it] 37%|███▋      | 11/30 [02:39<06:11, 19.56s/it] 40%|████      | 12/30 [02:41<04:13, 14.08s/it] 43%|████▎     | 13/30 [02:42<02:51, 10.09s/it] 47%|████▋     | 14/30 [02:43<01:58,  7.41s/it] 50%|█████     | 15/30 [02:45<01:25,  5.68s/it] 53%|█████▎    | 16/30 [03:37<04:34, 19.61s/it] 57%|█████▋    | 17/30 [03:39<03:05, 14.30s/it] 60%|██████    | 18/30 [03:40<02:04, 10.37s/it] 63%|██████▎   | 19/30 [03:42<01:25,  7.77s/it] 67%|██████▋   | 20/30 [03:44<01:01,  6.12s/it] 70%|███████   | 21/30 [04:36<03:00, 20.04s/it] 73%|███████▎  | 22/30 [04:39<01:58, 14.75s/it] 77%|███████▋  | 23/30 [04:40<01:15, 10.77s/it] 80%|████████  | 24/30 [04:42<00:49,  8.18s/it] 83%|████████▎ | 25/30 [04:45<00:32,  6.54s/it] 87%|████████▋ | 26/30 [05:38<01:21, 20.37s/it] 90%|█████████ | 27/30 [05:41<00:45, 15.12s/it] 93%|█████████▎| 28/30 [05:42<00:22, 11.04s/it] 97%|█████████▋| 29/30 [05:45<00:08,  8.44s/it]100%|██████████| 30/30 [05:46<00:00,  6.50s/it]100%|██████████| 30/30 [05:46<00:00, 11.57s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[1000]
 [1000]
 [   0]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 347.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:57<01:55, 57.70s/it] 67%|██████▋   | 2/3 [00:57<00:23, 23.85s/it]100%|██████████| 3/3 [00:57<00:00, 19.28s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [1000], Y: [5039498.64329072], extra_outputs: {}), UserFunctionResult(X: [1000], Y: [5039498.64329072], extra_outputs: {}), UserFunctionResult(X: [0], Y: [4927328.35], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[304]
 [304]
 [304]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:50<01:41, 50.73s/it] 67%|██████▋   | 2/3 [00:50<00:20, 20.95s/it]100%|██████████| 3/3 [00:50<00:00, 16.94s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [304], Y: [4830027.54683636], extra_outputs: {}), UserFunctionResult(X: [304], Y: [4830027.54683636], extra_outputs: {}), UserFunctionResult(X: [304], Y: [4830027.54683636], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [310.34482759], Val: 4829985.6680601295

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: solar

Wind: 1.0, Solar: 0.7

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:28, 50.63s/it]  7%|▋         | 2/30 [00:51<09:51, 21.14s/it] 10%|█         | 3/30 [00:51<05:15, 11.67s/it] 13%|█▎        | 4/30 [00:52<03:08,  7.25s/it] 17%|█▋        | 5/30 [00:52<01:59,  4.78s/it] 20%|██        | 6/30 [01:43<08:11, 20.50s/it] 23%|██▎       | 7/30 [01:44<05:23, 14.07s/it] 27%|██▋       | 8/30 [01:45<03:37,  9.90s/it] 30%|███       | 9/30 [01:46<02:30,  7.14s/it] 33%|███▎      | 10/30 [01:47<01:43,  5.16s/it] 37%|███▋      | 11/30 [02:38<06:09, 19.44s/it] 40%|████      | 12/30 [02:40<04:10, 13.90s/it] 43%|████▎     | 13/30 [02:41<02:52, 10.13s/it] 47%|████▋     | 14/30 [02:43<02:01,  7.58s/it] 50%|█████     | 15/30 [02:44<01:24,  5.62s/it] 53%|█████▎    | 16/30 [03:37<04:38, 19.86s/it] 57%|█████▋    | 17/30 [03:38<03:06, 14.38s/it] 60%|██████    | 18/30 [03:40<02:06, 10.58s/it] 63%|██████▎   | 19/30 [03:42<01:28,  8.06s/it] 67%|██████▋   | 20/30 [03:44<01:00,  6.05s/it] 70%|███████   | 21/30 [04:36<02:59, 19.95s/it] 73%|███████▎  | 22/30 [04:38<01:57, 14.64s/it] 77%|███████▋  | 23/30 [04:40<01:16, 10.89s/it] 80%|████████  | 24/30 [04:43<00:50,  8.39s/it] 83%|████████▎ | 25/30 [04:45<00:31,  6.37s/it] 87%|████████▋ | 26/30 [05:37<01:20, 20.24s/it] 90%|█████████ | 27/30 [05:40<00:44, 14.89s/it] 93%|█████████▎| 28/30 [05:42<00:22, 11.18s/it] 97%|█████████▋| 29/30 [05:45<00:08,  8.60s/it]100%|██████████| 30/30 [05:46<00:00,  6.39s/it]100%|██████████| 30/30 [05:46<00:00, 11.55s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[351]
 [351]
 [351]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 347.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:50<01:41, 50.60s/it] 67%|██████▋   | 2/3 [00:50<00:20, 20.93s/it]100%|██████████| 3/3 [00:50<00:00, 16.92s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [351], Y: [3280283.96708904], extra_outputs: {}), UserFunctionResult(X: [351], Y: [3280283.96708904], extra_outputs: {}), UserFunctionResult(X: [351], Y: [3280283.96708904], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[0]
 [0]
 [0]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:46<01:33, 46.76s/it]100%|██████████| 3/3 [00:46<00:00, 15.59s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [0], Y: [3410993.29], extra_outputs: {}), UserFunctionResult(X: [0], Y: [3410993.29], extra_outputs: {}), UserFunctionResult(X: [0], Y: [3410993.29], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [351.], Val: 3280283.967089043

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: solar

Wind: 1.0, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:49<24:08, 49.95s/it]  7%|▋         | 2/30 [00:50<09:44, 20.87s/it] 10%|█         | 3/30 [00:50<05:12, 11.56s/it] 13%|█▎        | 4/30 [00:51<03:05,  7.13s/it] 17%|█▋        | 5/30 [00:51<01:59,  4.77s/it] 20%|██        | 6/30 [01:41<08:04, 20.19s/it] 23%|██▎       | 7/30 [01:43<05:20, 13.94s/it] 27%|██▋       | 8/30 [01:44<03:36,  9.82s/it] 30%|███       | 9/30 [01:44<02:26,  6.96s/it] 33%|███▎      | 10/30 [01:45<01:43,  5.18s/it] 37%|███▋      | 11/30 [02:36<06:02, 19.07s/it] 40%|████      | 12/30 [02:38<04:07, 13.73s/it] 43%|████▎     | 13/30 [02:39<02:50, 10.04s/it] 47%|████▋     | 14/30 [02:40<01:56,  7.29s/it] 50%|█████     | 15/30 [02:42<01:24,  5.62s/it] 53%|█████▎    | 16/30 [03:33<04:29, 19.23s/it] 57%|█████▋    | 17/30 [03:35<03:03, 14.11s/it] 60%|██████    | 18/30 [03:37<02:05, 10.44s/it] 63%|██████▎   | 19/30 [03:38<01:24,  7.72s/it] 67%|██████▋   | 20/30 [03:40<01:00,  6.07s/it] 70%|███████   | 21/30 [04:32<02:56, 19.66s/it] 73%|███████▎  | 22/30 [04:34<01:56, 14.54s/it] 77%|███████▋  | 23/30 [04:37<01:16, 10.90s/it] 80%|████████  | 24/30 [04:38<00:48,  8.08s/it] 83%|████████▎ | 25/30 [04:41<00:32,  6.55s/it] 87%|████████▋ | 26/30 [05:33<01:20, 20.17s/it] 90%|█████████ | 27/30 [05:36<00:45, 15.06s/it] 93%|█████████▎| 28/30 [05:39<00:22, 11.36s/it] 97%|█████████▋| 29/30 [05:41<00:08,  8.45s/it]100%|██████████| 30/30 [05:43<00:00,  6.56s/it]100%|██████████| 30/30 [05:43<00:00, 11.44s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[431]
 [431]
 [431]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 343.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:51<01:43, 51.89s/it]100%|██████████| 3/3 [00:51<00:00, 17.30s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [431], Y: [1055981.9965723], extra_outputs: {}), UserFunctionResult(X: [431], Y: [1055981.9965723], extra_outputs: {}), UserFunctionResult(X: [431], Y: [1055981.9965723], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[432]
 [432]
 [432]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:52<01:44, 52.33s/it] 67%|██████▋   | 2/3 [00:52<00:21, 21.61s/it]100%|██████████| 3/3 [00:52<00:00, 17.48s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [432], Y: [1055995.34360958], extra_outputs: {}), UserFunctionResult(X: [432], Y: [1055995.34360958], extra_outputs: {}), UserFunctionResult(X: [432], Y: [1055995.34360958], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [431.], Val: 1055981.9965722966

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: solar

Wind: 1.0, Solar: 1.2

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:49<24:08, 49.95s/it]  7%|▋         | 2/30 [00:50<09:44, 20.86s/it] 10%|█         | 3/30 [00:50<05:11, 11.54s/it] 13%|█▎        | 4/30 [00:51<03:07,  7.20s/it] 17%|█▋        | 5/30 [00:51<01:58,  4.74s/it] 20%|██        | 6/30 [01:42<08:05, 20.23s/it] 23%|██▎       | 7/30 [01:43<05:19, 13.91s/it] 27%|██▋       | 8/30 [01:43<03:34,  9.76s/it] 30%|███       | 9/30 [01:44<02:28,  7.05s/it] 33%|███▎      | 10/30 [01:45<01:43,  5.16s/it] 37%|███▋      | 11/30 [02:36<06:01, 19.05s/it] 40%|████      | 12/30 [02:37<04:05, 13.65s/it] 43%|████▎     | 13/30 [02:39<02:49,  9.95s/it] 47%|████▋     | 14/30 [02:40<01:58,  7.38s/it] 50%|█████     | 15/30 [02:41<01:23,  5.57s/it] 53%|█████▎    | 16/30 [03:33<04:29, 19.26s/it] 57%|█████▋    | 17/30 [03:34<03:01, 13.96s/it] 60%|██████    | 18/30 [03:36<02:04, 10.34s/it] 63%|██████▎   | 19/30 [03:38<01:25,  7.81s/it] 67%|██████▋   | 20/30 [03:40<01:00,  6.02s/it] 70%|███████   | 21/30 [04:31<02:56, 19.61s/it] 73%|███████▎  | 22/30 [04:33<01:54, 14.35s/it] 77%|███████▋  | 23/30 [04:36<01:15, 10.72s/it] 80%|████████  | 24/30 [04:38<00:49,  8.27s/it] 83%|████████▎ | 25/30 [04:40<00:32,  6.46s/it] 87%|████████▋ | 26/30 [05:32<01:19, 19.99s/it] 90%|█████████ | 27/30 [05:34<00:44, 14.75s/it] 93%|█████████▎| 28/30 [05:37<00:22, 11.06s/it] 97%|█████████▋| 29/30 [05:39<00:08,  8.50s/it]100%|██████████| 30/30 [05:41<00:00,  6.47s/it]100%|██████████| 30/30 [05:41<00:00, 11.39s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[404]
 [404]
 [404]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 342.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:51<01:42, 51.38s/it]100%|██████████| 3/3 [00:51<00:00, 17.15s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [404], Y: [-293188.57443455], extra_outputs: {}), UserFunctionResult(X: [404], Y: [-293188.57443455], extra_outputs: {}), UserFunctionResult(X: [404], Y: [-293188.57443455], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[424]
 [424]
 [424]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:51<01:42, 51.49s/it]100%|██████████| 3/3 [00:51<00:00, 13.41s/it]100%|██████████| 3/3 [00:51<00:00, 17.22s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [424], Y: [-293165.55568874], extra_outputs: {}), UserFunctionResult(X: [424], Y: [-293165.55568874], extra_outputs: {}), UserFunctionResult(X: [424], Y: [-293165.55568874], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [413.79310345], Val: -293225.25809893623

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: solar

Wind: 1.0, Solar: 1.7

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:15, 50.20s/it]  7%|▋         | 2/30 [00:50<09:46, 20.95s/it] 10%|█         | 3/30 [00:51<05:11, 11.54s/it] 13%|█▎        | 4/30 [00:51<03:06,  7.17s/it] 17%|█▋        | 5/30 [00:51<01:58,  4.74s/it] 20%|██        | 6/30 [01:44<08:20, 20.87s/it] 23%|██▎       | 7/30 [01:45<05:30, 14.38s/it] 27%|██▋       | 8/30 [01:45<03:40, 10.03s/it] 30%|███       | 9/30 [01:46<02:30,  7.19s/it] 33%|███▎      | 10/30 [01:47<01:45,  5.26s/it] 37%|███▋      | 11/30 [02:39<06:08, 19.40s/it] 40%|████      | 12/30 [02:40<04:10, 13.94s/it] 43%|████▎     | 13/30 [02:41<02:50, 10.06s/it] 47%|████▋     | 14/30 [02:43<01:58,  7.41s/it] 50%|█████     | 15/30 [02:44<01:24,  5.63s/it] 53%|█████▎    | 16/30 [03:36<04:32, 19.45s/it] 57%|█████▋    | 17/30 [03:37<03:04, 14.16s/it] 60%|██████    | 18/30 [03:39<02:03, 10.31s/it] 63%|██████▎   | 19/30 [03:41<01:25,  7.77s/it] 67%|██████▋   | 20/30 [03:43<01:00,  6.07s/it] 70%|███████   | 21/30 [04:34<02:58, 19.78s/it] 73%|███████▎  | 22/30 [04:37<01:56, 14.52s/it] 77%|███████▋  | 23/30 [04:39<01:14, 10.70s/it] 80%|████████  | 24/30 [04:41<00:48,  8.16s/it] 83%|████████▎ | 25/30 [04:43<00:32,  6.45s/it] 87%|████████▋ | 26/30 [05:36<01:20, 20.21s/it] 90%|█████████ | 27/30 [05:38<00:44, 14.97s/it] 93%|█████████▎| 28/30 [05:40<00:22, 11.04s/it] 97%|█████████▋| 29/30 [05:42<00:08,  8.39s/it]100%|██████████| 30/30 [05:44<00:00,  6.41s/it]100%|██████████| 30/30 [05:44<00:00, 11.49s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[367]
 [367]
 [  0]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 345.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:50<01:41, 50.92s/it]100%|██████████| 3/3 [00:50<00:00, 16.98s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [367], Y: [-3445480.1713143], extra_outputs: {}), UserFunctionResult(X: [367], Y: [-3445480.1713143], extra_outputs: {}), UserFunctionResult(X: [0], Y: [-3332633.9], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[354]
 [354]
 [354]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:51<01:42, 51.14s/it]100%|██████████| 3/3 [00:51<00:00, 17.05s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [354], Y: [-3445427.18379909], extra_outputs: {}), UserFunctionResult(X: [354], Y: [-3445427.18379909], extra_outputs: {}), UserFunctionResult(X: [354], Y: [-3445427.18379909], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [367.], Val: -3445480.1713143

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: solar

Wind: 1.0, Solar: 2.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:25, 50.54s/it]  7%|▋         | 2/30 [00:50<09:49, 21.05s/it] 10%|█         | 3/30 [00:51<05:13, 11.62s/it] 13%|█▎        | 4/30 [00:51<03:07,  7.21s/it] 17%|█▋        | 5/30 [00:52<01:59,  4.78s/it] 20%|██        | 6/30 [01:43<08:13, 20.57s/it] 23%|██▎       | 7/30 [01:44<05:25, 14.14s/it] 27%|██▋       | 8/30 [01:45<03:37,  9.88s/it] 30%|███       | 9/30 [01:45<02:28,  7.05s/it] 33%|███▎      | 10/30 [01:46<01:43,  5.15s/it] 37%|███▋      | 11/30 [02:37<06:05, 19.22s/it] 40%|████      | 12/30 [02:39<04:08, 13.80s/it] 43%|████▎     | 13/30 [02:40<02:49,  9.97s/it] 47%|████▋     | 14/30 [02:41<01:56,  7.29s/it] 50%|█████     | 15/30 [02:43<01:22,  5.52s/it] 53%|█████▎    | 16/30 [03:34<04:30, 19.35s/it] 57%|█████▋    | 17/30 [03:36<03:03, 14.10s/it] 60%|██████    | 18/30 [03:37<02:03, 10.30s/it] 63%|██████▎   | 19/30 [03:39<01:24,  7.68s/it] 67%|██████▋   | 20/30 [03:41<00:59,  5.95s/it] 70%|███████   | 21/30 [04:33<02:57, 19.76s/it] 73%|███████▎  | 22/30 [04:35<01:55, 14.49s/it] 77%|███████▋  | 23/30 [04:37<01:15, 10.74s/it] 80%|████████  | 24/30 [04:39<00:48,  8.06s/it] 83%|████████▎ | 25/30 [04:41<00:31,  6.36s/it] 87%|████████▋ | 26/30 [05:34<01:21, 20.38s/it] 90%|█████████ | 27/30 [05:37<00:45, 15.07s/it] 93%|█████████▎| 28/30 [05:39<00:22, 11.24s/it] 97%|█████████▋| 29/30 [05:41<00:08,  8.43s/it]100%|██████████| 30/30 [05:43<00:00,  6.49s/it]100%|██████████| 30/30 [05:43<00:00, 11.46s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[621]
 [724]
 [724]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 344.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:59<01:58, 59.07s/it] 67%|██████▋   | 2/3 [01:00<00:24, 24.97s/it]100%|██████████| 3/3 [01:00<00:00, 20.08s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [621], Y: [-5241361.97584246], extra_outputs: {}), UserFunctionResult(X: [724], Y: [-5209645.07650152], extra_outputs: {}), UserFunctionResult(X: [724], Y: [-5209645.07650152], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[315]
 [315]
 [317]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:51<01:42, 51.28s/it]100%|██████████| 3/3 [00:51<00:00, 17.11s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [315], Y: [-5288933.97725342], extra_outputs: {}), UserFunctionResult(X: [315], Y: [-5288933.97725342], extra_outputs: {}), UserFunctionResult(X: [317], Y: [-5288907.28317885], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 2
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[316]
 [317]
 [316]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:52<01:44, 52.33s/it]100%|██████████| 3/3 [00:52<00:00, 17.44s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [316], Y: [-5288920.63021614], extra_outputs: {}), UserFunctionResult(X: [317], Y: [-5288907.28317885], extra_outputs: {}), UserFunctionResult(X: [316], Y: [-5288920.63021614], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 3
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[316]
 [316]
 [316]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:50<01:41, 50.69s/it]100%|██████████| 3/3 [00:50<00:00, 16.90s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [316], Y: [-5288920.63021614], extra_outputs: {}), UserFunctionResult(X: [316], Y: [-5288920.63021614], extra_outputs: {}), UserFunctionResult(X: [316], Y: [-5288920.63021614], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [315.], Val: -5288933.977253417

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind

Wind: 0.1, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:26, 50.56s/it]  7%|▋         | 2/30 [00:50<09:48, 21.01s/it] 10%|█         | 3/30 [00:51<05:13, 11.62s/it] 13%|█▎        | 4/30 [00:51<03:06,  7.18s/it] 17%|█▋        | 5/30 [00:52<01:58,  4.74s/it] 20%|██        | 6/30 [01:43<08:16, 20.67s/it] 23%|██▎       | 7/30 [01:44<05:25, 14.14s/it] 27%|██▋       | 8/30 [01:45<03:38,  9.95s/it] 30%|███       | 9/30 [01:46<02:28,  7.07s/it] 33%|███▎      | 10/30 [01:47<01:43,  5.19s/it] 37%|███▋      | 11/30 [02:39<06:10, 19.49s/it] 40%|████      | 12/30 [02:39<04:09, 13.86s/it] 43%|████▎     | 13/30 [02:41<02:51, 10.11s/it] 47%|████▋     | 14/30 [02:42<01:58,  7.39s/it] 50%|█████     | 15/30 [02:44<01:23,  5.59s/it] 53%|█████▎    | 16/30 [03:36<04:34, 19.62s/it] 57%|█████▋    | 17/30 [03:37<03:03, 14.14s/it] 60%|██████    | 18/30 [03:39<02:06, 10.51s/it] 63%|██████▎   | 19/30 [03:41<01:25,  7.78s/it] 67%|██████▋   | 20/30 [03:42<01:00,  6.02s/it] 70%|███████   | 21/30 [04:36<03:03, 20.36s/it] 73%|███████▎  | 22/30 [04:38<01:58, 14.77s/it] 77%|███████▋  | 23/30 [04:41<01:17, 11.10s/it] 80%|████████  | 24/30 [04:42<00:49,  8.24s/it] 83%|████████▎ | 25/30 [04:45<00:32,  6.53s/it] 87%|████████▋ | 26/30 [05:38<01:22, 20.54s/it] 90%|█████████ | 27/30 [05:40<00:44, 14.99s/it] 93%|█████████▎| 28/30 [05:43<00:22, 11.34s/it] 97%|█████████▋| 29/30 [05:44<00:08,  8.46s/it]100%|██████████| 30/30 [05:46<00:00,  6.49s/it]100%|██████████| 30/30 [05:46<00:00, 11.56s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[846]
 [169]
 [982]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 347.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:56<01:52, 56.18s/it]100%|██████████| 3/3 [00:57<00:00, 14.94s/it]100%|██████████| 3/3 [00:57<00:00, 19.07s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [846], Y: [8251628.09304792], extra_outputs: {}), UserFunctionResult(X: [169], Y: [8115343.2683021], extra_outputs: {}), UserFunctionResult(X: [982], Y: [8320852.8771195], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[912]
 [755]
 [281]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:55<01:51, 55.89s/it]100%|██████████| 3/3 [00:55<00:00, 18.63s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [912], Y: [8282720.47950914], extra_outputs: {}), UserFunctionResult(X: [755], Y: [8211899.97115446], extra_outputs: {}), UserFunctionResult(X: [281], Y: [8102830.04447868], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 2
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[290]
 [619]
 [331]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:49<01:39, 49.68s/it] 67%|██████▋   | 2/3 [00:52<00:22, 22.03s/it]100%|██████████| 3/3 [00:52<00:00, 17.45s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [290], Y: [8102401.34331433], extra_outputs: {}), UserFunctionResult(X: [619], Y: [8164114.18858296], extra_outputs: {}), UserFunctionResult(X: [331], Y: [8103584.51134323], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 3
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[515]
 [409]
 [962]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:52<01:44, 52.02s/it]100%|██████████| 3/3 [00:55<00:00, 14.73s/it]100%|██████████| 3/3 [00:55<00:00, 18.46s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [515], Y: [8137880.89870469], extra_outputs: {}), UserFunctionResult(X: [409], Y: [8115584.64725189], extra_outputs: {}), UserFunctionResult(X: [962], Y: [8309957.90637368], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 4
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[ 19]
 [236]
 [ 19]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:47<01:34, 47.07s/it] 67%|██████▋   | 2/3 [00:48<00:20, 20.31s/it]100%|██████████| 3/3 [00:48<00:00, 16.22s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [19], Y: [8166481.36270856], extra_outputs: {}), UserFunctionResult(X: [236], Y: [8105696.6048006], extra_outputs: {}), UserFunctionResult(X: [19], Y: [8166481.36270856], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped after 5 evaluations
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [310.34482759], Val: 8102197.8630601475

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind

Wind: 0.5, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:11, 50.07s/it]  7%|▋         | 2/30 [00:50<09:40, 20.73s/it] 10%|█         | 3/30 [00:50<05:09, 11.47s/it] 13%|█▎        | 4/30 [00:51<03:06,  7.17s/it] 17%|█▋        | 5/30 [00:51<01:58,  4.74s/it] 20%|██        | 6/30 [01:43<08:18, 20.77s/it] 23%|██▎       | 7/30 [01:44<05:25, 14.17s/it] 27%|██▋       | 8/30 [01:45<03:38,  9.92s/it] 30%|███       | 9/30 [01:46<02:30,  7.16s/it] 33%|███▎      | 10/30 [01:47<01:45,  5.26s/it] 37%|███▋      | 11/30 [02:38<06:09, 19.44s/it] 40%|████      | 12/30 [02:39<04:08, 13.78s/it] 43%|████▎     | 13/30 [02:40<02:49,  9.97s/it] 47%|████▋     | 14/30 [02:42<01:59,  7.48s/it] 50%|█████     | 15/30 [02:43<01:24,  5.65s/it] 53%|█████▎    | 16/30 [03:35<04:33, 19.57s/it] 57%|█████▋    | 17/30 [03:36<03:02, 14.03s/it] 60%|██████    | 18/30 [03:38<02:03, 10.29s/it] 63%|██████▎   | 19/30 [03:40<01:27,  7.92s/it] 67%|██████▋   | 20/30 [03:43<01:01,  6.18s/it] 70%|███████   | 21/30 [04:36<03:02, 20.28s/it] 73%|███████▎  | 22/30 [04:37<01:56, 14.62s/it] 77%|███████▋  | 23/30 [04:39<01:15, 10.81s/it] 80%|████████  | 24/30 [04:42<00:51,  8.53s/it] 83%|████████▎ | 25/30 [04:45<00:33,  6.68s/it] 87%|████████▋ | 26/30 [05:37<01:22, 20.54s/it] 90%|█████████ | 27/30 [05:39<00:44, 14.86s/it] 93%|█████████▎| 28/30 [05:41<00:22, 11.08s/it] 97%|█████████▋| 29/30 [05:44<00:08,  8.61s/it]100%|██████████| 30/30 [05:46<00:00,  6.59s/it]100%|██████████| 30/30 [05:46<00:00, 11.55s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[339]
 [339]
 [339]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 347.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:51<01:43, 51.66s/it]100%|██████████| 3/3 [00:51<00:00, 17.24s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [339], Y: [4836555.27964153], extra_outputs: {}), UserFunctionResult(X: [339], Y: [4836555.27964153], extra_outputs: {}), UserFunctionResult(X: [339], Y: [4836555.27964153], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[347]
 [345]
 [347]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:51<01:43, 51.68s/it]100%|██████████| 3/3 [00:51<00:00, 17.23s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [347], Y: [4836522.67193986], extra_outputs: {}), UserFunctionResult(X: [345], Y: [4836530.82386532], extra_outputs: {}), UserFunctionResult(X: [347], Y: [4836522.67193986], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 2
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[347]
 [347]
 [347]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:51<01:43, 51.73s/it]100%|██████████| 3/3 [00:51<00:00, 17.24s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [347], Y: [4836522.67193986], extra_outputs: {}), UserFunctionResult(X: [347], Y: [4836522.67193986], extra_outputs: {}), UserFunctionResult(X: [347], Y: [4836522.67193986], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [347.], Val: 4836522.671939865

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind

Wind: 0.7, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:51<24:49, 51.36s/it]  7%|▋         | 2/30 [00:51<09:59, 21.42s/it] 10%|█         | 3/30 [00:52<05:20, 11.86s/it] 13%|█▎        | 4/30 [00:52<03:10,  7.34s/it] 17%|█▋        | 5/30 [00:53<02:01,  4.88s/it] 20%|██        | 6/30 [01:44<08:12, 20.54s/it] 23%|██▎       | 7/30 [01:44<05:23, 14.06s/it] 27%|██▋       | 8/30 [01:46<03:39,  9.98s/it] 30%|███       | 9/30 [01:47<02:30,  7.14s/it] 33%|███▎      | 10/30 [01:48<01:45,  5.27s/it] 37%|███▋      | 11/30 [02:39<06:08, 19.39s/it] 40%|████      | 12/30 [02:40<04:09, 13.89s/it] 43%|████▎     | 13/30 [02:42<02:53, 10.21s/it] 47%|████▋     | 14/30 [02:43<02:00,  7.52s/it] 50%|█████     | 15/30 [02:45<01:25,  5.69s/it] 53%|█████▎    | 16/30 [03:37<04:34, 19.57s/it] 57%|█████▋    | 17/30 [03:38<03:04, 14.18s/it] 60%|██████    | 18/30 [03:41<02:07, 10.66s/it] 63%|██████▎   | 19/30 [03:43<01:28,  8.01s/it] 67%|██████▋   | 20/30 [03:44<01:00,  6.09s/it] 70%|███████   | 21/30 [04:37<03:00, 20.07s/it] 73%|███████▎  | 22/30 [04:39<01:57, 14.72s/it] 77%|███████▋  | 23/30 [04:42<01:18, 11.24s/it] 80%|████████  | 24/30 [04:44<00:50,  8.49s/it] 83%|████████▎ | 25/30 [04:46<00:32,  6.51s/it] 87%|████████▋ | 26/30 [05:40<01:22, 20.68s/it] 90%|█████████ | 27/30 [05:42<00:45, 15.21s/it] 93%|█████████▎| 28/30 [05:46<00:23, 11.68s/it] 97%|█████████▋| 29/30 [05:48<00:08,  8.88s/it]100%|██████████| 30/30 [05:50<00:00,  6.66s/it]100%|██████████| 30/30 [05:50<00:00, 11.67s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[385]
 [385]
 [385]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 350.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:52<01:44, 52.38s/it]100%|██████████| 3/3 [00:52<00:00, 17.46s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [385], Y: [3265347.00885692], extra_outputs: {}), UserFunctionResult(X: [385], Y: [3265347.00885692], extra_outputs: {}), UserFunctionResult(X: [385], Y: [3265347.00885692], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[999]
 [999]
 [999]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [01:00<02:00, 60.15s/it]100%|██████████| 3/3 [01:00<00:00, 20.06s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [999], Y: [3423815.46475342], extra_outputs: {}), UserFunctionResult(X: [999], Y: [3423815.46475342], extra_outputs: {}), UserFunctionResult(X: [999], Y: [3423815.46475342], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [385.], Val: 3265347.008856923

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind

Wind: 1.0, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:51<24:42, 51.14s/it]  7%|▋         | 2/30 [00:51<09:58, 21.37s/it] 10%|█         | 3/30 [00:51<05:16, 11.74s/it] 13%|█▎        | 4/30 [00:52<03:10,  7.34s/it] 17%|█▋        | 5/30 [00:53<02:02,  4.88s/it] 20%|██        | 6/30 [01:44<08:16, 20.69s/it] 23%|██▎       | 7/30 [01:45<05:28, 14.29s/it] 27%|██▋       | 8/30 [01:46<03:38,  9.92s/it] 30%|███       | 9/30 [01:47<02:30,  7.15s/it] 33%|███▎      | 10/30 [01:48<01:46,  5.32s/it] 37%|███▋      | 11/30 [02:40<06:10, 19.53s/it] 40%|████      | 12/30 [02:41<04:13, 14.08s/it] 43%|████▎     | 13/30 [02:42<02:50, 10.05s/it] 47%|████▋     | 14/30 [02:44<01:59,  7.50s/it] 50%|█████     | 15/30 [02:45<01:26,  5.79s/it] 53%|█████▎    | 16/30 [03:38<04:36, 19.73s/it] 57%|█████▋    | 17/30 [03:40<03:07, 14.42s/it] 60%|██████    | 18/30 [03:41<02:05, 10.44s/it] 63%|██████▎   | 19/30 [03:43<01:27,  7.92s/it] 67%|██████▋   | 20/30 [03:45<01:02,  6.29s/it] 70%|███████   | 21/30 [04:38<03:01, 20.15s/it] 73%|███████▎  | 22/30 [04:40<01:59, 14.89s/it] 77%|███████▋  | 23/30 [04:42<01:16, 10.88s/it] 80%|████████  | 24/30 [04:45<00:50,  8.39s/it] 83%|████████▎ | 25/30 [04:48<00:33,  6.78s/it] 87%|████████▋ | 26/30 [05:40<01:22, 20.58s/it] 90%|█████████ | 27/30 [05:43<00:45, 15.32s/it] 93%|█████████▎| 28/30 [05:45<00:22, 11.24s/it] 97%|█████████▋| 29/30 [05:48<00:08,  8.60s/it]100%|██████████| 30/30 [05:50<00:00,  6.80s/it]100%|██████████| 30/30 [05:50<00:00, 11.69s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[431]
 [431]
 [431]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 351.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:53<01:47, 53.60s/it]100%|██████████| 3/3 [00:53<00:00, 17.89s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [431], Y: [1055981.9965723], extra_outputs: {}), UserFunctionResult(X: [431], Y: [1055981.9965723], extra_outputs: {}), UserFunctionResult(X: [431], Y: [1055981.9965723], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[432]
 [432]
 [432]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:51<01:43, 51.95s/it]100%|██████████| 3/3 [00:52<00:00, 17.35s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [432], Y: [1055995.34360958], extra_outputs: {}), UserFunctionResult(X: [432], Y: [1055995.34360958], extra_outputs: {}), UserFunctionResult(X: [432], Y: [1055995.34360958], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [431.], Val: 1055981.9965722966

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind

Wind: 1.2, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:18, 50.31s/it]  7%|▋         | 2/30 [00:50<09:46, 20.94s/it] 10%|█         | 3/30 [00:51<05:11, 11.55s/it] 13%|█▎        | 4/30 [00:51<03:09,  7.28s/it] 17%|█▋        | 5/30 [00:52<01:58,  4.75s/it] 20%|██        | 6/30 [01:42<08:07, 20.31s/it] 23%|██▎       | 7/30 [01:43<05:18, 13.87s/it] 27%|██▋       | 8/30 [01:44<03:34,  9.74s/it] 30%|███       | 9/30 [01:45<02:29,  7.12s/it] 33%|███▎      | 10/30 [01:46<01:43,  5.15s/it] 37%|███▋      | 11/30 [02:37<06:04, 19.19s/it] 40%|████      | 12/30 [02:38<04:05, 13.65s/it] 43%|████▎     | 13/30 [02:39<02:48,  9.92s/it] 47%|████▋     | 14/30 [02:41<02:00,  7.53s/it] 50%|█████     | 15/30 [02:42<01:23,  5.56s/it] 53%|█████▎    | 16/30 [03:34<04:31, 19.39s/it] 57%|█████▋    | 17/30 [03:35<03:01, 13.93s/it] 60%|██████    | 18/30 [03:37<02:03, 10.27s/it] 63%|██████▎   | 19/30 [03:39<01:28,  8.01s/it] 67%|██████▋   | 20/30 [03:41<01:00,  6.00s/it] 70%|███████   | 21/30 [04:32<02:58, 19.78s/it] 73%|███████▎  | 22/30 [04:34<01:54, 14.30s/it] 77%|███████▋  | 23/30 [04:36<01:14, 10.65s/it] 80%|████████  | 24/30 [04:40<00:50,  8.49s/it] 83%|████████▎ | 25/30 [04:41<00:32,  6.41s/it] 87%|████████▋ | 26/30 [05:34<01:20, 20.24s/it] 90%|█████████ | 27/30 [05:35<00:44, 14.69s/it] 93%|█████████▎| 28/30 [05:38<00:22, 11.01s/it] 97%|█████████▋| 29/30 [05:41<00:08,  8.76s/it]100%|██████████| 30/30 [05:43<00:00,  6.50s/it]100%|██████████| 30/30 [05:43<00:00, 11.44s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[440]
 [440]
 [440]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 343.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:52<01:44, 52.04s/it]100%|██████████| 3/3 [00:52<00:00, 17.35s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [440], Y: [-295528.15909209], extra_outputs: {}), UserFunctionResult(X: [440], Y: [-295528.15909209], extra_outputs: {}), UserFunctionResult(X: [440], Y: [-295528.15909209], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[438]
 [451]
 [441]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:51<01:43, 51.99s/it]100%|██████████| 3/3 [00:52<00:00, 17.36s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [438], Y: [-295520.00716667], extra_outputs: {}), UserFunctionResult(X: [451], Y: [-295442.32218189], extra_outputs: {}), UserFunctionResult(X: [441], Y: [-295532.2350548], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 2
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[439]
 [439]
 [439]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:51<01:43, 51.82s/it]100%|██████████| 3/3 [00:51<00:00, 17.30s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [439], Y: [-295524.08312938], extra_outputs: {}), UserFunctionResult(X: [439], Y: [-295524.08312938], extra_outputs: {}), UserFunctionResult(X: [439], Y: [-295524.08312938], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [441.], Val: -295532.235054799

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind

Wind: 1.7, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:15, 50.19s/it]  7%|▋         | 2/30 [00:50<09:44, 20.87s/it] 10%|█         | 3/30 [00:51<05:13, 11.61s/it] 13%|█▎        | 4/30 [00:51<03:05,  7.12s/it] 17%|█▋        | 5/30 [00:51<01:58,  4.74s/it] 20%|██        | 6/30 [01:42<08:05, 20.21s/it] 23%|██▎       | 7/30 [01:42<05:18, 13.87s/it] 27%|██▋       | 8/30 [01:44<03:35,  9.80s/it] 30%|███       | 9/30 [01:44<02:24,  6.89s/it] 33%|███▎      | 10/30 [01:45<01:41,  5.08s/it] 37%|███▋      | 11/30 [02:36<06:02, 19.09s/it] 40%|████      | 12/30 [02:37<04:05, 13.64s/it] 43%|████▎     | 13/30 [02:39<02:49,  9.99s/it] 47%|████▋     | 14/30 [02:39<01:55,  7.22s/it] 50%|█████     | 15/30 [02:41<01:21,  5.46s/it] 53%|█████▎    | 16/30 [03:32<04:29, 19.23s/it] 57%|█████▋    | 17/30 [03:34<03:00, 13.92s/it] 60%|██████    | 18/30 [03:36<02:04, 10.36s/it] 63%|██████▎   | 19/30 [03:37<01:23,  7.63s/it] 67%|██████▋   | 20/30 [03:39<00:58,  5.87s/it] 70%|███████   | 21/30 [04:30<02:56, 19.61s/it] 73%|███████▎  | 22/30 [04:33<01:55, 14.38s/it] 77%|███████▋  | 23/30 [04:35<01:15, 10.81s/it] 80%|████████  | 24/30 [04:36<00:47,  7.97s/it] 83%|████████▎ | 25/30 [04:39<00:31,  6.28s/it] 87%|████████▋ | 26/30 [05:31<01:20, 20.00s/it] 90%|█████████ | 27/30 [05:33<00:44, 14.73s/it] 93%|█████████▎| 28/30 [05:36<00:22, 11.16s/it] 97%|█████████▋| 29/30 [05:37<00:08,  8.24s/it]100%|██████████| 30/30 [05:39<00:00,  6.29s/it]100%|██████████| 30/30 [05:39<00:00, 11.32s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[145]
 [351]
 [824]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 340.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:48<01:36, 48.21s/it] 67%|██████▋   | 2/3 [00:50<00:21, 21.09s/it]100%|██████████| 3/3 [00:53<00:00, 13.03s/it]100%|██████████| 3/3 [00:53<00:00, 17.92s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [145], Y: [-3486877.77109283], extra_outputs: {}), UserFunctionResult(X: [351], Y: [-3526727.51641095], extra_outputs: {}), UserFunctionResult(X: [824], Y: [-3420902.90327246], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[ 50]
 [806]
 [107]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:47<01:34, 47.10s/it] 67%|██████▋   | 2/3 [00:52<00:22, 22.82s/it]100%|██████████| 3/3 [00:52<00:00, 17.64s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [50], Y: [-3439065.14863546], extra_outputs: {}), UserFunctionResult(X: [806], Y: [-3428356.27194369], extra_outputs: {}), UserFunctionResult(X: [107], Y: [-3470066.4965099], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 2
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[107]
 [351]
 [824]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:47<01:35, 47.77s/it] 67%|██████▋   | 2/3 [00:50<00:21, 21.17s/it]100%|██████████| 3/3 [00:53<00:00, 13.06s/it]100%|██████████| 3/3 [00:53<00:00, 17.91s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [107], Y: [-3470066.4965099], extra_outputs: {}), UserFunctionResult(X: [351], Y: [-3526727.51641095], extra_outputs: {}), UserFunctionResult(X: [824], Y: [-3420902.90327246], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 3
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[141]
 [141]
 [141]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:48<01:36, 48.23s/it]100%|██████████| 3/3 [00:48<00:00, 16.08s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [141], Y: [-3485258.55124203], extra_outputs: {}), UserFunctionResult(X: [141], Y: [-3485258.55124203], extra_outputs: {}), UserFunctionResult(X: [141], Y: [-3485258.55124203], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [344.82758621], Val: -3526864.503172008

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind

Wind: 2.0, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:10, 50.02s/it]  7%|▋         | 2/30 [00:50<09:47, 20.97s/it] 10%|█         | 3/30 [00:50<05:11, 11.54s/it] 13%|█▎        | 4/30 [00:51<03:05,  7.14s/it] 17%|█▋        | 5/30 [00:51<01:58,  4.72s/it] 20%|██        | 6/30 [01:41<08:04, 20.17s/it] 23%|██▎       | 7/30 [01:43<05:21, 13.96s/it] 27%|██▋       | 8/30 [01:43<03:33,  9.71s/it] 30%|███       | 9/30 [01:44<02:25,  6.94s/it] 33%|███▎      | 10/30 [01:45<01:41,  5.07s/it] 37%|███▋      | 11/30 [02:35<06:00, 18.98s/it] 40%|████      | 12/30 [02:37<04:07, 13.73s/it] 43%|████▎     | 13/30 [02:38<02:48,  9.90s/it] 47%|████▋     | 14/30 [02:39<01:56,  7.26s/it] 50%|█████     | 15/30 [02:41<01:21,  5.45s/it] 53%|█████▎    | 16/30 [03:32<04:27, 19.11s/it] 57%|█████▋    | 17/30 [03:34<03:01, 13.98s/it] 60%|██████    | 18/30 [03:35<02:03, 10.25s/it] 63%|██████▎   | 19/30 [03:37<01:24,  7.69s/it] 67%|██████▋   | 20/30 [03:38<00:58,  5.84s/it] 70%|███████   | 21/30 [04:30<02:55, 19.49s/it] 73%|███████▎  | 22/30 [04:32<01:55, 14.41s/it] 77%|███████▋  | 23/30 [04:34<01:14, 10.67s/it] 80%|████████  | 24/30 [04:36<00:48,  8.11s/it] 83%|████████▎ | 25/30 [04:38<00:31,  6.26s/it] 87%|████████▋ | 26/30 [05:30<01:19, 19.89s/it] 90%|█████████ | 27/30 [05:33<00:44, 14.78s/it] 93%|█████████▎| 28/30 [05:35<00:22, 11.01s/it] 97%|█████████▋| 29/30 [05:37<00:08,  8.36s/it]100%|██████████| 30/30 [05:39<00:00,  6.26s/it]100%|██████████| 30/30 [05:39<00:00, 11.30s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[  14]
 [  14]
 [1000]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 339.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:46<01:33, 46.78s/it] 67%|██████▋   | 2/3 [00:46<00:19, 19.37s/it]100%|██████████| 3/3 [00:54<00:00, 13.78s/it]100%|██████████| 3/3 [00:54<00:00, 18.03s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [14], Y: [-5345018.91247789], extra_outputs: {}), UserFunctionResult(X: [14], Y: [-5345018.91247789], extra_outputs: {}), UserFunctionResult(X: [1000], Y: [-5214401.57920928], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[320]
 [319]
 [320]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:50<01:40, 50.46s/it]100%|██████████| 3/3 [00:50<00:00, 16.82s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [320], Y: [-5431961.18256694], extra_outputs: {}), UserFunctionResult(X: [319], Y: [-5431939.68360429], extra_outputs: {}), UserFunctionResult(X: [320], Y: [-5431961.18256694], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 2
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[320]
 [320]
 [319]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:50<01:40, 50.30s/it]100%|██████████| 3/3 [00:50<00:00, 16.77s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [320], Y: [-5431961.18256694], extra_outputs: {}), UserFunctionResult(X: [320], Y: [-5431961.18256694], extra_outputs: {}), UserFunctionResult(X: [319], Y: [-5431939.68360429], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 3
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[320]
 [321]
 [320]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:50<01:40, 50.25s/it]100%|██████████| 3/3 [00:50<00:00, 16.75s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [320], Y: [-5431961.18256694], extra_outputs: {}), UserFunctionResult(X: [321], Y: [-5431982.68152969], extra_outputs: {}), UserFunctionResult(X: [320], Y: [-5431961.18256694], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 4
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[320]
 [320]
 [318]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:51<01:42, 51.11s/it]100%|██████████| 3/3 [00:51<00:00, 17.04s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [320], Y: [-5431961.18256694], extra_outputs: {}), UserFunctionResult(X: [320], Y: [-5431961.18256694], extra_outputs: {}), UserFunctionResult(X: [318], Y: [-5431918.18464154], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped after 5 evaluations
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [321.], Val: -5431982.68152969

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind+solar

Wind: 1.2, Solar: 0.1

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:14, 50.14s/it]  7%|▋         | 2/30 [00:50<09:44, 20.89s/it] 10%|█         | 3/30 [00:50<05:10, 11.48s/it] 13%|█▎        | 4/30 [00:51<03:05,  7.14s/it] 17%|█▋        | 5/30 [00:51<01:56,  4.68s/it] 20%|██        | 6/30 [01:42<08:09, 20.41s/it] 23%|██▎       | 7/30 [01:43<05:22, 14.00s/it] 27%|██▋       | 8/30 [01:44<03:34,  9.77s/it] 30%|███       | 9/30 [01:45<02:27,  7.02s/it] 33%|███▎      | 10/30 [01:45<01:41,  5.07s/it] 37%|███▋      | 11/30 [02:36<06:02, 19.10s/it] 40%|████      | 12/30 [02:37<04:05, 13.67s/it] 43%|████▎     | 13/30 [02:38<02:46,  9.80s/it] 47%|████▋     | 14/30 [02:40<01:56,  7.30s/it] 50%|█████     | 15/30 [02:41<01:21,  5.41s/it] 53%|█████▎    | 16/30 [03:32<04:28, 19.19s/it] 57%|█████▋    | 17/30 [03:34<03:01, 13.93s/it] 60%|██████    | 18/30 [03:35<02:01, 10.11s/it] 63%|██████▎   | 19/30 [03:37<01:24,  7.67s/it] 67%|██████▋   | 20/30 [03:38<00:57,  5.77s/it] 70%|███████   | 21/30 [04:30<02:55, 19.55s/it] 73%|███████▎  | 22/30 [04:32<01:54, 14.32s/it] 77%|███████▋  | 23/30 [04:34<01:13, 10.46s/it] 80%|████████  | 24/30 [04:36<00:48,  8.07s/it] 83%|████████▎ | 25/30 [04:38<00:30,  6.17s/it] 87%|████████▋ | 26/30 [05:30<01:19, 19.90s/it] 90%|█████████ | 27/30 [05:32<00:43, 14.66s/it] 93%|█████████▎| 28/30 [05:34<00:21, 10.78s/it] 97%|█████████▋| 29/30 [05:37<00:08,  8.33s/it]100%|██████████| 30/30 [05:38<00:00,  6.23s/it]100%|██████████| 30/30 [05:38<00:00, 11.28s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[1000]
 [   0]
 [   0]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 338.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:53<01:47, 53.73s/it]100%|██████████| 3/3 [00:53<00:00, 17.91s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [1000], Y: [6736684.91379072], extra_outputs: {}), UserFunctionResult(X: [0], Y: [6566260.82], extra_outputs: {}), UserFunctionResult(X: [0], Y: [6566260.82], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[338]
 [187]
 [130]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:49<01:39, 49.65s/it]100%|██████████| 3/3 [00:49<00:00, 16.55s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [338], Y: [6508031.89560428], extra_outputs: {}), UserFunctionResult(X: [187], Y: [6507906.88847338], extra_outputs: {}), UserFunctionResult(X: [130], Y: [6518645.2873478], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 2
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[410]
 [ 14]
 [336]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:50<01:40, 50.50s/it]100%|██████████| 3/3 [00:50<00:00, 16.83s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [410], Y: [6518601.66678922], extra_outputs: {}), UserFunctionResult(X: [14], Y: [6559591.72802209], extra_outputs: {}), UserFunctionResult(X: [336], Y: [6507796.12552968], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 3
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[774]
 [367]
 [ 78]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:53<01:46, 53.04s/it]100%|██████████| 3/3 [00:53<00:00, 17.68s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [774], Y: [6630541.74636302], extra_outputs: {}), UserFunctionResult(X: [367], Y: [6511450.56168568], extra_outputs: {}), UserFunctionResult(X: [78], Y: [6533335.75040868], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 4
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[260]
 [940]
 [220]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:49<01:38, 49.35s/it] 67%|██████▋   | 2/3 [00:54<00:23, 23.15s/it]100%|██████████| 3/3 [00:54<00:00, 18.06s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [260], Y: [6504264.1271956], extra_outputs: {}), UserFunctionResult(X: [940], Y: [6706386.95255326], extra_outputs: {}), UserFunctionResult(X: [220], Y: [6505237.33520397], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped after 5 evaluations
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [260.], Val: 6504264.127195597

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind+solar

Wind: 1.2, Solar: 0.3

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:13, 50.11s/it]  7%|▋         | 2/30 [00:50<09:45, 20.91s/it] 10%|█         | 3/30 [00:51<05:12, 11.58s/it] 13%|█▎        | 4/30 [00:51<03:06,  7.17s/it] 17%|█▋        | 5/30 [00:51<01:57,  4.70s/it] 20%|██        | 6/30 [01:42<08:05, 20.22s/it] 23%|██▎       | 7/30 [01:42<05:18, 13.86s/it] 27%|██▋       | 8/30 [01:43<03:35,  9.78s/it] 30%|███       | 9/30 [01:44<02:26,  6.96s/it] 33%|███▎      | 10/30 [01:45<01:41,  5.07s/it] 37%|███▋      | 11/30 [02:36<06:01, 19.03s/it] 40%|████      | 12/30 [02:37<04:04, 13.58s/it] 43%|████▎     | 13/30 [02:38<02:48,  9.90s/it] 47%|████▋     | 14/30 [02:39<01:56,  7.28s/it] 50%|█████     | 15/30 [02:41<01:22,  5.48s/it] 53%|█████▎    | 16/30 [03:32<04:28, 19.16s/it] 57%|█████▋    | 17/30 [03:33<02:59, 13.84s/it] 60%|██████    | 18/30 [03:35<02:03, 10.30s/it] 63%|██████▎   | 19/30 [03:37<01:24,  7.71s/it] 67%|██████▋   | 20/30 [03:39<00:58,  5.90s/it] 70%|███████   | 21/30 [04:30<02:55, 19.48s/it] 73%|███████▎  | 22/30 [04:32<01:53, 14.19s/it] 77%|███████▋  | 23/30 [04:34<01:15, 10.71s/it] 80%|████████  | 24/30 [04:36<00:48,  8.11s/it] 83%|████████▎ | 25/30 [04:38<00:31,  6.30s/it] 87%|████████▋ | 26/30 [05:30<01:19, 19.83s/it] 90%|█████████ | 27/30 [05:32<00:43, 14.54s/it] 93%|█████████▎| 28/30 [05:35<00:22, 11.02s/it] 97%|█████████▋| 29/30 [05:37<00:08,  8.39s/it]100%|██████████| 30/30 [05:39<00:00,  6.35s/it]100%|██████████| 30/30 [05:39<00:00, 11.30s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[250]
 [236]
 [400]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 339.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:49<01:38, 49.36s/it]100%|██████████| 3/3 [00:50<00:00, 13.23s/it]100%|██████████| 3/3 [00:50<00:00, 16.85s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [250], Y: [4939602.57382269], extra_outputs: {}), UserFunctionResult(X: [236], Y: [4940208.4618006], extra_outputs: {}), UserFunctionResult(X: [400], Y: [4950080.91891631], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[426]
 [286]
 [851]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:50<01:41, 50.94s/it]100%|██████████| 3/3 [00:54<00:00, 14.37s/it]100%|██████████| 3/3 [00:54<00:00, 18.03s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [426], Y: [4954818.53788585], extra_outputs: {}), UserFunctionResult(X: [286], Y: [4939682.33816514], extra_outputs: {}), UserFunctionResult(X: [851], Y: [5093977.34323438], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 2
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[412]
 [135]
 [299]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:50<01:41, 50.76s/it]100%|██████████| 3/3 [00:50<00:00, 16.92s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [412], Y: [4952192.45936376], extra_outputs: {}), UserFunctionResult(X: [135], Y: [4958809.74603425], extra_outputs: {}), UserFunctionResult(X: [299], Y: [4939995.23364991], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 3
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[454]
 [849]
 [985]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:51<01:43, 51.55s/it] 67%|██████▋   | 2/3 [00:55<00:23, 23.49s/it]100%|██████████| 3/3 [00:56<00:00, 13.20s/it]100%|██████████| 3/3 [00:56<00:00, 18.79s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [454], Y: [4960636.94242997], extra_outputs: {}), UserFunctionResult(X: [849], Y: [5093079.49915982], extra_outputs: {}), UserFunctionResult(X: [985], Y: [5158706.43373135], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 4
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[276]
 [276]
 [276]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:49<01:39, 49.68s/it]100%|██████████| 3/3 [00:49<00:00, 16.59s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [276], Y: [4939548.86779223], extra_outputs: {}), UserFunctionResult(X: [276], Y: [4939548.86779223], extra_outputs: {}), UserFunctionResult(X: [276], Y: [4939548.86779223], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped after 5 evaluations
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [275.86206897], Val: 4939535.5207549585

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind+solar

Wind: 1.2, Solar: 0.7

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:15, 50.19s/it]  7%|▋         | 2/30 [00:50<09:46, 20.93s/it] 10%|█         | 3/30 [00:51<05:13, 11.59s/it] 13%|█▎        | 4/30 [00:51<03:07,  7.23s/it] 17%|█▋        | 5/30 [00:51<01:58,  4.73s/it] 20%|██        | 6/30 [01:42<08:06, 20.27s/it] 23%|██▎       | 7/30 [01:43<05:19, 13.90s/it] 27%|██▋       | 8/30 [01:44<03:34,  9.76s/it] 30%|███       | 9/30 [01:45<02:28,  7.07s/it] 33%|███▎      | 10/30 [01:45<01:41,  5.08s/it] 37%|███▋      | 11/30 [02:36<06:03, 19.11s/it] 40%|████      | 12/30 [02:37<04:05, 13.64s/it] 43%|████▎     | 13/30 [02:39<02:48,  9.89s/it] 47%|████▋     | 14/30 [02:40<01:58,  7.42s/it] 50%|█████     | 15/30 [02:41<01:22,  5.48s/it] 53%|█████▎    | 16/30 [03:33<04:30, 19.30s/it] 57%|█████▋    | 17/30 [03:34<03:01, 13.92s/it] 60%|██████    | 18/30 [03:36<02:03, 10.28s/it] 63%|██████▎   | 19/30 [03:38<01:26,  7.86s/it] 67%|██████▋   | 20/30 [03:40<00:59,  5.91s/it] 70%|███████   | 21/30 [04:31<02:57, 19.72s/it] 73%|███████▎  | 22/30 [04:33<01:54, 14.36s/it] 77%|███████▋  | 23/30 [04:35<01:14, 10.68s/it] 80%|████████  | 24/30 [04:38<00:49,  8.30s/it] 83%|████████▎ | 25/30 [04:40<00:31,  6.28s/it] 87%|████████▋ | 26/30 [05:32<01:20, 20.11s/it] 90%|█████████ | 27/30 [05:34<00:44, 14.74s/it] 93%|█████████▎| 28/30 [05:37<00:22, 11.05s/it] 97%|█████████▋| 29/30 [05:40<00:08,  8.57s/it]100%|██████████| 30/30 [05:41<00:00,  6.36s/it]100%|██████████| 30/30 [05:41<00:00, 11.38s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[330]
 [330]
 [330]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 341.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:50<01:41, 50.60s/it]100%|██████████| 3/3 [00:50<00:00, 16.88s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [330], Y: [1864396.38930593], extra_outputs: {}), UserFunctionResult(X: [330], Y: [1864396.38930593], extra_outputs: {}), UserFunctionResult(X: [330], Y: [1864396.38930593], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[351]
 [351]
 [351]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:50<01:41, 50.89s/it]100%|██████████| 3/3 [00:50<00:00, 16.97s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [351], Y: [1863796.81558904], extra_outputs: {}), UserFunctionResult(X: [351], Y: [1863796.81558904], extra_outputs: {}), UserFunctionResult(X: [351], Y: [1863796.81558904], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [351.], Val: 1863796.8155890403

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind+solar

Wind: 1.5, Solar: 0.1

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:15, 50.20s/it]  7%|▋         | 2/30 [00:50<09:46, 20.96s/it] 10%|█         | 3/30 [00:50<05:10, 11.50s/it] 13%|█▎        | 4/30 [00:51<03:05,  7.14s/it] 17%|█▋        | 5/30 [00:51<01:58,  4.75s/it] 20%|██        | 6/30 [01:42<08:06, 20.28s/it] 23%|██▎       | 7/30 [01:43<05:20, 13.92s/it] 27%|██▋       | 8/30 [01:43<03:32,  9.66s/it] 30%|███       | 9/30 [01:44<02:26,  6.97s/it] 33%|███▎      | 10/30 [01:45<01:42,  5.10s/it] 37%|███▋      | 11/30 [02:36<06:01, 19.02s/it] 40%|████      | 12/30 [02:37<04:05, 13.62s/it] 43%|████▎     | 13/30 [02:38<02:45,  9.74s/it] 47%|████▋     | 14/30 [02:39<01:56,  7.29s/it] 50%|█████     | 15/30 [02:41<01:22,  5.50s/it] 53%|█████▎    | 16/30 [03:32<04:28, 19.19s/it] 57%|█████▋    | 17/30 [03:33<03:00, 13.89s/it] 60%|██████    | 18/30 [03:35<02:00, 10.08s/it] 63%|██████▎   | 19/30 [03:37<01:24,  7.68s/it] 67%|██████▋   | 20/30 [03:39<00:59,  5.94s/it] 70%|███████   | 21/30 [04:30<02:55, 19.51s/it] 73%|███████▎  | 22/30 [04:32<01:54, 14.30s/it] 77%|███████▋  | 23/30 [04:33<01:13, 10.47s/it] 80%|████████  | 24/30 [04:36<00:48,  8.07s/it] 83%|████████▎ | 25/30 [04:38<00:32,  6.41s/it] 87%|████████▋ | 26/30 [05:30<01:19, 19.90s/it] 90%|█████████ | 27/30 [05:32<00:43, 14.60s/it] 93%|█████████▎| 28/30 [05:34<00:21, 10.76s/it] 97%|█████████▋| 29/30 [05:37<00:08,  8.35s/it]100%|██████████| 30/30 [05:38<00:00,  6.44s/it]100%|██████████| 30/30 [05:38<00:00, 11.30s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[262]
 [  0]
 [  0]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 339.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:48<01:37, 48.78s/it]100%|██████████| 3/3 [00:48<00:00, 16.26s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [262], Y: [4371931.30377016], extra_outputs: {}), UserFunctionResult(X: [0], Y: [4438474.84], extra_outputs: {}), UserFunctionResult(X: [0], Y: [4438474.84], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[271]
 [271]
 [271]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:49<01:39, 49.77s/it]100%|██████████| 3/3 [00:49<00:00, 16.59s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [271], Y: [4372016.58110578], extra_outputs: {}), UserFunctionResult(X: [271], Y: [4372016.58110578], extra_outputs: {}), UserFunctionResult(X: [271], Y: [4372016.58110578], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [262.], Val: 4371931.303770162

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind+solar

Wind: 1.5, Solar: 0.3

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:18, 50.31s/it]  7%|▋         | 2/30 [00:50<09:45, 20.91s/it] 10%|█         | 3/30 [00:51<05:11, 11.54s/it] 13%|█▎        | 4/30 [00:51<03:06,  7.16s/it] 17%|█▋        | 5/30 [00:51<01:58,  4.73s/it] 20%|██        | 6/30 [01:42<08:05, 20.24s/it] 23%|██▎       | 7/30 [01:43<05:19, 13.90s/it] 27%|██▋       | 8/30 [01:44<03:35,  9.79s/it] 30%|███       | 9/30 [01:44<02:26,  6.96s/it] 33%|███▎      | 10/30 [01:45<01:41,  5.07s/it] 37%|███▋      | 11/30 [02:36<06:00, 18.96s/it] 40%|████      | 12/30 [02:37<04:04, 13.60s/it] 43%|████▎     | 13/30 [02:38<02:48,  9.93s/it] 47%|████▋     | 14/30 [02:40<01:56,  7.30s/it] 50%|█████     | 15/30 [02:41<01:21,  5.44s/it] 53%|█████▎    | 16/30 [03:32<04:27, 19.11s/it] 57%|█████▋    | 17/30 [03:33<03:00, 13.86s/it] 60%|██████    | 18/30 [03:35<02:04, 10.34s/it] 63%|██████▎   | 19/30 [03:37<01:24,  7.70s/it] 67%|██████▋   | 20/30 [03:38<00:58,  5.81s/it] 70%|███████   | 21/30 [04:30<02:55, 19.45s/it] 73%|███████▎  | 22/30 [04:32<01:53, 14.19s/it] 77%|███████▋  | 23/30 [04:34<01:15, 10.76s/it] 80%|████████  | 24/30 [04:36<00:48,  8.12s/it] 83%|████████▎ | 25/30 [04:38<00:31,  6.20s/it] 87%|████████▋ | 26/30 [05:30<01:19, 19.86s/it] 90%|█████████ | 27/30 [05:32<00:43, 14.58s/it] 93%|█████████▎| 28/30 [05:35<00:22, 11.12s/it] 97%|█████████▋| 29/30 [05:37<00:08,  8.41s/it]100%|██████████| 30/30 [05:38<00:00,  6.25s/it]100%|██████████| 30/30 [05:38<00:00, 11.30s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[302]
 [302]
 [302]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 339.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:49<01:39, 49.95s/it]100%|██████████| 3/3 [00:49<00:00, 16.65s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [302], Y: [2835132.3152618], extra_outputs: {}), UserFunctionResult(X: [302], Y: [2835132.3152618], extra_outputs: {}), UserFunctionResult(X: [302], Y: [2835132.3152618], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[1]
 [0]
 [0]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:46<01:33, 46.69s/it]100%|██████████| 3/3 [00:46<00:00, 15.59s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [1], Y: [2910136.8735373], extra_outputs: {}), UserFunctionResult(X: [0], Y: [2910724.62], extra_outputs: {}), UserFunctionResult(X: [0], Y: [2910724.62], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [310.34482759], Val: 2835099.7075601155

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind+solar

Wind: 1.5, Solar: 0.7

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:14, 50.14s/it]  7%|▋         | 2/30 [00:50<09:43, 20.84s/it] 10%|█         | 3/30 [00:50<05:11, 11.53s/it] 13%|█▎        | 4/30 [00:51<03:05,  7.12s/it] 17%|█▋        | 5/30 [00:51<01:58,  4.74s/it] 20%|██        | 6/30 [01:42<08:06, 20.27s/it] 23%|██▎       | 7/30 [01:42<05:18, 13.86s/it] 27%|██▋       | 8/30 [01:44<03:36,  9.82s/it] 30%|███       | 9/30 [01:44<02:25,  6.93s/it] 33%|███▎      | 10/30 [01:45<01:41,  5.09s/it] 37%|███▋      | 11/30 [02:36<06:02, 19.06s/it] 40%|████      | 12/30 [02:37<04:04, 13.58s/it] 43%|████▎     | 13/30 [02:39<02:49,  9.99s/it] 47%|████▋     | 14/30 [02:39<01:55,  7.23s/it] 50%|█████     | 15/30 [02:41<01:21,  5.47s/it] 53%|█████▎    | 16/30 [03:32<04:29, 19.24s/it] 57%|█████▋    | 17/30 [03:33<02:59, 13.81s/it] 60%|██████    | 18/30 [03:36<02:04, 10.39s/it] 63%|██████▎   | 19/30 [03:37<01:23,  7.59s/it] 67%|██████▋   | 20/30 [03:39<00:59,  5.91s/it] 70%|███████   | 21/30 [04:30<02:56, 19.62s/it] 73%|███████▎  | 22/30 [04:32<01:53, 14.17s/it] 77%|███████▋  | 23/30 [04:35<01:15, 10.81s/it] 80%|████████  | 24/30 [04:36<00:47,  7.98s/it] 83%|████████▎ | 25/30 [04:38<00:31,  6.25s/it] 87%|████████▋ | 26/30 [05:30<01:20, 20.01s/it] 90%|█████████ | 27/30 [05:32<00:43, 14.51s/it] 93%|█████████▎| 28/30 [05:35<00:22, 11.15s/it] 97%|█████████▋| 29/30 [05:37<00:08,  8.26s/it]100%|██████████| 30/30 [05:39<00:00,  6.29s/it]100%|██████████| 30/30 [05:39<00:00, 11.30s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[336]
 [336]
 [336]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 339.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:50<01:40, 50.34s/it]100%|██████████| 3/3 [00:50<00:00, 16.79s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [336], Y: [-142748.64097032], extra_outputs: {}), UserFunctionResult(X: [336], Y: [-142748.64097032], extra_outputs: {}), UserFunctionResult(X: [336], Y: [-142748.64097032], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[341]
 [342]
 [342]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:50<01:40, 50.31s/it]100%|██████████| 3/3 [00:50<00:00, 16.78s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [341], Y: [-142769.02078386], extra_outputs: {}), UserFunctionResult(X: [342], Y: [-142773.09674657], extra_outputs: {}), UserFunctionResult(X: [342], Y: [-142773.09674657], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [344.82758621], Val: -142781.24867199437

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind+solar

Wind: 2.5, Solar: 0.1

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:10, 50.02s/it]  7%|▋         | 2/30 [00:50<09:42, 20.80s/it] 10%|█         | 3/30 [00:50<05:08, 11.42s/it] 13%|█▎        | 4/30 [00:51<03:05,  7.15s/it] 17%|█▋        | 5/30 [00:51<01:56,  4.66s/it] 20%|██        | 6/30 [01:41<08:02, 20.12s/it] 23%|██▎       | 7/30 [01:42<05:17, 13.79s/it] 27%|██▋       | 8/30 [01:43<03:33,  9.69s/it] 30%|███       | 9/30 [01:44<02:25,  6.95s/it] 33%|███▎      | 10/30 [01:44<01:39,  4.96s/it] 37%|███▋      | 11/30 [02:35<05:58, 18.88s/it] 40%|████      | 12/30 [02:36<04:03, 13.51s/it] 43%|████▎     | 13/30 [02:37<02:46,  9.79s/it] 47%|████▋     | 14/30 [02:39<01:56,  7.28s/it] 50%|█████     | 15/30 [02:39<01:19,  5.29s/it] 53%|█████▎    | 16/30 [03:30<04:26, 19.00s/it] 57%|█████▋    | 17/30 [03:32<02:59, 13.79s/it] 60%|██████    | 18/30 [03:33<02:01, 10.14s/it] 63%|██████▎   | 19/30 [03:35<01:24,  7.69s/it] 67%|██████▋   | 20/30 [03:36<00:56,  5.69s/it] 70%|███████   | 21/30 [04:28<02:54, 19.36s/it] 73%|███████▎  | 22/30 [04:30<01:52, 14.12s/it] 77%|███████▋  | 23/30 [04:32<01:13, 10.56s/it] 80%|████████  | 24/30 [04:34<00:48,  8.05s/it] 83%|████████▎ | 25/30 [04:35<00:30,  6.04s/it] 87%|████████▋ | 26/30 [05:27<01:18, 19.59s/it] 90%|█████████ | 27/30 [05:29<00:43, 14.47s/it] 93%|█████████▎| 28/30 [05:31<00:21, 10.84s/it] 97%|█████████▋| 29/30 [05:34<00:08,  8.28s/it]100%|██████████| 30/30 [05:35<00:00,  6.10s/it]100%|██████████| 30/30 [05:35<00:00, 11.18s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[12]
 [12]
 [12]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 335.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:46<01:33, 46.67s/it]100%|██████████| 3/3 [00:46<00:00, 15.56s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [12], Y: [-2187376.25205249], extra_outputs: {}), UserFunctionResult(X: [12], Y: [-2187376.25205249], extra_outputs: {}), UserFunctionResult(X: [12], Y: [-2187376.25205249], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[210]
 [210]
 [210]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:48<01:37, 48.66s/it]100%|██████████| 3/3 [00:48<00:00, 16.22s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [210], Y: [-2214239.38916895], extra_outputs: {}), UserFunctionResult(X: [210], Y: [-2214239.38916895], extra_outputs: {}), UserFunctionResult(X: [210], Y: [-2214239.38916895], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [206.89655172], Val: -2214292.7773181205

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind+solar

Wind: 2.5, Solar: 0.3

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:12, 50.08s/it]  7%|▋         | 2/30 [00:50<09:44, 20.86s/it] 10%|█         | 3/30 [00:50<05:08, 11.42s/it] 13%|█▎        | 4/30 [00:51<03:05,  7.13s/it] 17%|█▋        | 5/30 [00:51<01:58,  4.73s/it] 20%|██        | 6/30 [01:41<08:04, 20.18s/it] 23%|██▎       | 7/30 [01:42<05:17, 13.82s/it] 27%|██▋       | 8/30 [01:43<03:30,  9.58s/it] 30%|███       | 9/30 [01:44<02:25,  6.92s/it] 33%|███▎      | 10/30 [01:45<01:41,  5.06s/it] 37%|███▋      | 11/30 [02:35<06:00, 18.97s/it] 40%|████      | 12/30 [02:36<04:03, 13.52s/it] 43%|████▎     | 13/30 [02:37<02:43,  9.63s/it] 47%|████▋     | 14/30 [02:38<01:55,  7.19s/it] 50%|█████     | 15/30 [02:40<01:21,  5.44s/it] 53%|█████▎    | 16/30 [03:31<04:27, 19.09s/it] 57%|█████▋    | 17/30 [03:32<02:59, 13.79s/it] 60%|██████    | 18/30 [03:33<01:59,  9.94s/it] 63%|██████▎   | 19/30 [03:35<01:23,  7.57s/it] 67%|██████▋   | 20/30 [03:37<00:58,  5.85s/it] 70%|███████   | 21/30 [04:28<02:56, 19.57s/it] 73%|███████▎  | 22/30 [04:30<01:54, 14.25s/it] 77%|███████▋  | 23/30 [04:32<01:12, 10.36s/it] 80%|████████  | 24/30 [04:34<00:48,  8.03s/it] 83%|████████▎ | 25/30 [04:36<00:31,  6.30s/it] 87%|████████▋ | 26/30 [05:28<01:19, 19.85s/it] 90%|█████████ | 27/30 [05:30<00:43, 14.56s/it] 93%|█████████▎| 28/30 [05:32<00:21, 10.63s/it] 97%|█████████▋| 29/30 [05:34<00:08,  8.19s/it]100%|██████████| 30/30 [05:36<00:00,  6.24s/it]100%|██████████| 30/30 [05:36<00:00, 11.21s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[14]
 [14]
 [14]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 336.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:46<01:33, 46.98s/it]100%|██████████| 3/3 [00:46<00:00, 15.66s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [14], Y: [-3623817.98047792], extra_outputs: {}), UserFunctionResult(X: [14], Y: [-3623817.98047792], extra_outputs: {}), UserFunctionResult(X: [14], Y: [-3623817.98047792], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[218]
 [218]
 [218]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:48<01:37, 48.71s/it]100%|██████████| 3/3 [00:48<00:00, 16.24s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [218], Y: [-3651428.62787061], extra_outputs: {}), UserFunctionResult(X: [218], Y: [-3651428.62787061], extra_outputs: {}), UserFunctionResult(X: [218], Y: [-3651428.62787061], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [206.89655172], Val: -3651466.8313181116

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind+solar

Wind: 2.5, Solar: 0.7

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:30, 50.69s/it]  7%|▋         | 2/30 [00:50<09:47, 20.99s/it] 10%|█         | 3/30 [00:51<05:11, 11.52s/it] 13%|█▎        | 4/30 [00:51<03:06,  7.17s/it] 17%|█▋        | 5/30 [00:52<01:57,  4.72s/it] 20%|██        | 6/30 [01:42<08:06, 20.29s/it] 23%|██▎       | 7/30 [01:43<05:17, 13.82s/it] 27%|██▋       | 8/30 [01:43<03:31,  9.60s/it] 30%|███       | 9/30 [01:44<02:24,  6.90s/it] 33%|███▎      | 10/30 [01:45<01:40,  5.03s/it] 37%|███▋      | 11/30 [02:36<06:03, 19.11s/it] 40%|████      | 12/30 [02:37<04:03, 13.53s/it] 43%|████▎     | 13/30 [02:38<02:44,  9.68s/it] 47%|████▋     | 14/30 [02:39<01:54,  7.18s/it] 50%|█████     | 15/30 [02:40<01:21,  5.40s/it] 53%|█████▎    | 16/30 [03:32<04:30, 19.32s/it] 57%|█████▋    | 17/30 [03:33<02:59, 13.80s/it] 60%|██████    | 18/30 [03:34<01:59,  9.99s/it] 63%|██████▎   | 19/30 [03:36<01:23,  7.55s/it] 67%|██████▋   | 20/30 [03:38<00:58,  5.80s/it] 70%|███████   | 21/30 [04:29<02:56, 19.66s/it] 73%|███████▎  | 22/30 [04:31<01:52, 14.11s/it] 77%|███████▋  | 23/30 [04:32<01:12, 10.31s/it] 80%|████████  | 24/30 [04:34<00:47,  7.91s/it] 83%|████████▎ | 25/30 [04:37<00:30,  6.18s/it] 87%|████████▋ | 26/30 [05:29<01:20, 20.05s/it] 90%|█████████ | 27/30 [05:30<00:43, 14.50s/it] 93%|█████████▎| 28/30 [05:32<00:21, 10.67s/it] 97%|█████████▋| 29/30 [05:35<00:08,  8.18s/it]100%|██████████| 30/30 [05:36<00:00,  6.18s/it]100%|██████████| 30/30 [05:36<00:00, 11.22s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[260]
 [260]
 [260]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 337.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:49<01:38, 49.37s/it]100%|██████████| 3/3 [00:49<00:00, 16.46s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [260], Y: [-6497191.1233044], extra_outputs: {}), UserFunctionResult(X: [260], Y: [-6497191.1233044], extra_outputs: {}), UserFunctionResult(X: [260], Y: [-6497191.1233044], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[230]
 [230]
 [230]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:48<01:37, 48.98s/it]100%|██████████| 3/3 [00:49<00:00, 16.34s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [230], Y: [-6496528.73142311], extra_outputs: {}), UserFunctionResult(X: [230], Y: [-6496528.73142311], extra_outputs: {}), UserFunctionResult(X: [230], Y: [-6496528.73142311], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [260.], Val: -6497191.123304399

Network Param Scenario: 33 % Discount, Surge Scenario: solar

Wind: 1.0, Solar: 0.1

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:16, 50.22s/it]  7%|▋         | 2/30 [00:50<09:44, 20.89s/it] 10%|█         | 3/30 [00:50<05:09, 11.45s/it] 13%|█▎        | 4/30 [00:51<03:04,  7.11s/it] 17%|█▋        | 5/30 [00:51<01:59,  4.79s/it] 20%|██        | 6/30 [01:42<08:05, 20.23s/it] 23%|██▎       | 7/30 [01:42<05:19, 13.88s/it] 27%|██▋       | 8/30 [01:43<03:32,  9.64s/it] 30%|███       | 9/30 [01:44<02:24,  6.89s/it] 33%|███▎      | 10/30 [01:45<01:43,  5.17s/it] 37%|███▋      | 11/30 [02:36<06:01, 19.03s/it] 40%|████      | 12/30 [02:37<04:05, 13.61s/it] 43%|████▎     | 13/30 [02:38<02:45,  9.75s/it] 47%|████▋     | 14/30 [02:39<01:55,  7.20s/it] 50%|█████     | 15/30 [02:41<01:24,  5.60s/it] 53%|█████▎    | 16/30 [03:32<04:28, 19.15s/it] 57%|█████▋    | 17/30 [03:33<03:00, 13.91s/it] 60%|██████    | 18/30 [03:34<02:00, 10.06s/it] 63%|██████▎   | 19/30 [03:36<01:23,  7.59s/it] 67%|██████▋   | 20/30 [03:39<01:00,  6.06s/it] 70%|███████   | 21/30 [04:29<02:55, 19.46s/it] 73%|███████▎  | 22/30 [04:31<01:53, 14.25s/it] 77%|███████▋  | 23/30 [04:33<01:12, 10.41s/it] 80%|████████  | 24/30 [04:35<00:47,  7.99s/it] 83%|████████▎ | 25/30 [04:38<00:32,  6.48s/it] 87%|████████▋ | 26/30 [05:29<01:19, 19.80s/it] 90%|█████████ | 27/30 [05:32<00:43, 14.61s/it] 93%|█████████▎| 28/30 [05:33<00:21, 10.74s/it] 97%|█████████▋| 29/30 [05:36<00:08,  8.26s/it]100%|██████████| 30/30 [05:38<00:00,  6.48s/it]100%|██████████| 30/30 [05:38<00:00, 11.29s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[444]
 [444]
 [444]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 339.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:51<01:42, 51.44s/it]100%|██████████| 3/3 [00:51<00:00, 17.15s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [444], Y: [7803066.06255707], extra_outputs: {}), UserFunctionResult(X: [444], Y: [7803066.06255707], extra_outputs: {}), UserFunctionResult(X: [444], Y: [7803066.06255707], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[ 998]
 [ 998]
 [1000]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:57<01:54, 57.19s/it]100%|██████████| 3/3 [00:57<00:00, 19.06s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [998], Y: [7896581.76721615], extra_outputs: {}), UserFunctionResult(X: [998], Y: [7896581.76721615], extra_outputs: {}), UserFunctionResult(X: [1000], Y: [7897390.29929074], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 2
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[1]
 [3]
 [0]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:46<01:33, 46.80s/it]100%|██████████| 3/3 [00:46<00:00, 15.60s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [1], Y: [8030574.08003727], extra_outputs: {}), UserFunctionResult(X: [3], Y: [8028471.79611186], extra_outputs: {}), UserFunctionResult(X: [0], Y: [8031665.65], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 3
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[1000]
 [1000]
 [ 999]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:57<01:54, 57.18s/it]100%|██████████| 3/3 [00:57<00:00, 19.06s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [1000], Y: [7897390.29929074], extra_outputs: {}), UserFunctionResult(X: [1000], Y: [7897390.29929074], extra_outputs: {}), UserFunctionResult(X: [999], Y: [7896986.03325342], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 4
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[0]
 [1]
 [0]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:46<01:33, 46.88s/it]100%|██████████| 3/3 [00:46<00:00, 15.63s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [0], Y: [8031665.65], extra_outputs: {}), UserFunctionResult(X: [1], Y: [8030574.08003727], extra_outputs: {}), UserFunctionResult(X: [0], Y: [8031665.65], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped after 5 evaluations
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [448.27586207], Val: 7803066.006706256

Network Param Scenario: 33 % Discount, Surge Scenario: solar

Wind: 1.0, Solar: 0.5

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:16, 50.22s/it]  7%|▋         | 2/30 [00:50<09:46, 20.94s/it] 10%|█         | 3/30 [00:51<05:12, 11.56s/it] 13%|█▎        | 4/30 [00:51<03:05,  7.13s/it] 17%|█▋        | 5/30 [00:51<01:58,  4.73s/it] 20%|██        | 6/30 [01:42<08:06, 20.28s/it] 23%|██▎       | 7/30 [01:43<05:20, 13.93s/it] 27%|██▋       | 8/30 [01:44<03:34,  9.75s/it] 30%|███       | 9/30 [01:44<02:25,  6.93s/it] 33%|███▎      | 10/30 [01:45<01:42,  5.10s/it] 37%|███▋      | 11/30 [02:36<06:03, 19.13s/it] 40%|████      | 12/30 [02:37<04:06, 13.70s/it] 43%|████▎     | 13/30 [02:39<02:48,  9.92s/it] 47%|████▋     | 14/30 [02:40<01:56,  7.26s/it] 50%|█████     | 15/30 [02:41<01:22,  5.52s/it] 53%|█████▎    | 16/30 [03:32<04:29, 19.25s/it] 57%|█████▋    | 17/30 [03:34<03:01, 13.95s/it] 60%|██████    | 18/30 [03:36<02:04, 10.33s/it] 63%|██████▎   | 19/30 [03:37<01:24,  7.66s/it] 67%|██████▋   | 20/30 [03:39<00:59,  5.97s/it] 70%|███████   | 21/30 [04:31<02:56, 19.63s/it] 73%|███████▎  | 22/30 [04:33<01:54, 14.36s/it] 77%|███████▋  | 23/30 [04:35<01:14, 10.70s/it] 80%|████████  | 24/30 [04:37<00:48,  8.04s/it] 83%|████████▎ | 25/30 [04:40<00:32,  6.41s/it] 87%|████████▋ | 26/30 [05:31<01:20, 20.07s/it] 90%|█████████ | 27/30 [05:34<00:44, 14.85s/it] 93%|█████████▎| 28/30 [05:36<00:22, 11.04s/it] 97%|█████████▋| 29/30 [05:38<00:08,  8.27s/it]100%|██████████| 30/30 [05:40<00:00,  6.42s/it]100%|██████████| 30/30 [05:40<00:00, 11.36s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[603]
 [603]
 [603]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 341.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:53<01:47, 53.66s/it]100%|██████████| 3/3 [00:53<00:00, 17.89s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [603], Y: [4614703.6824863], extra_outputs: {}), UserFunctionResult(X: [603], Y: [4614703.6824863], extra_outputs: {}), UserFunctionResult(X: [603], Y: [4614703.6824863], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[572]
 [571]
 [572]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:53<01:46, 53.14s/it]100%|██████████| 3/3 [00:53<00:00, 17.73s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [572], Y: [4614528.92733029], extra_outputs: {}), UserFunctionResult(X: [571], Y: [4614555.89329301], extra_outputs: {}), UserFunctionResult(X: [572], Y: [4614528.92733029], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 2
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[572]
 [572]
 [572]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:53<01:46, 53.27s/it]100%|██████████| 3/3 [00:53<00:00, 17.76s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [572], Y: [4614528.92733029], extra_outputs: {}), UserFunctionResult(X: [572], Y: [4614528.92733029], extra_outputs: {}), UserFunctionResult(X: [572], Y: [4614528.92733029], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [586.20689655], Val: 4614434.399852369

Network Param Scenario: 33 % Discount, Surge Scenario: solar

Wind: 1.0, Solar: 0.7

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:16, 50.22s/it]  7%|▋         | 2/30 [00:50<09:44, 20.89s/it] 10%|█         | 3/30 [00:51<05:13, 11.60s/it] 13%|█▎        | 4/30 [00:51<03:06,  7.18s/it] 17%|█▋        | 5/30 [00:51<01:57,  4.71s/it] 20%|██        | 6/30 [01:42<08:06, 20.26s/it] 23%|██▎       | 7/30 [01:43<05:18, 13.87s/it] 27%|██▋       | 8/30 [01:44<03:36,  9.83s/it] 30%|███       | 9/30 [01:45<02:27,  7.02s/it] 33%|███▎      | 10/30 [01:45<01:42,  5.10s/it] 37%|███▋      | 11/30 [02:36<06:03, 19.12s/it] 40%|████      | 12/30 [02:37<04:05, 13.64s/it] 43%|████▎     | 13/30 [02:39<02:50, 10.02s/it] 47%|████▋     | 14/30 [02:40<01:57,  7.34s/it] 50%|█████     | 15/30 [02:41<01:22,  5.51s/it] 53%|█████▎    | 16/30 [03:33<04:30, 19.31s/it] 57%|█████▋    | 17/30 [03:34<03:01, 13.93s/it] 60%|██████    | 18/30 [03:37<02:05, 10.43s/it] 63%|██████▎   | 19/30 [03:38<01:25,  7.79s/it] 67%|██████▋   | 20/30 [03:40<00:59,  5.99s/it] 70%|███████   | 21/30 [04:31<02:56, 19.64s/it] 73%|███████▎  | 22/30 [04:33<01:54, 14.32s/it] 77%|███████▋  | 23/30 [04:36<01:16, 10.86s/it] 80%|████████  | 24/30 [04:38<00:49,  8.26s/it] 83%|████████▎ | 25/30 [04:40<00:31,  6.35s/it] 87%|████████▋ | 26/30 [05:32<01:20, 20.04s/it] 90%|█████████ | 27/30 [05:35<00:44, 14.78s/it] 93%|█████████▎| 28/30 [05:38<00:22, 11.24s/it] 97%|█████████▋| 29/30 [05:40<00:08,  8.50s/it]100%|██████████| 30/30 [05:41<00:00,  6.39s/it]100%|██████████| 30/30 [05:41<00:00, 11.39s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[185]
 [437]
 [432]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 342.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:48<01:37, 48.81s/it] 67%|██████▋   | 2/3 [00:51<00:21, 21.72s/it]100%|██████████| 3/3 [00:51<00:00, 17.22s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [185], Y: [3182195.17889879], extra_outputs: {}), UserFunctionResult(X: [437], Y: [3047162.14029606], extra_outputs: {}), UserFunctionResult(X: [432], Y: [3047970.7701096], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[622]
 [622]
 [622]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:53<01:47, 53.96s/it]100%|██████████| 3/3 [00:53<00:00, 17.99s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [622], Y: [3031015.30919483], extra_outputs: {}), UserFunctionResult(X: [622], Y: [3031015.30919483], extra_outputs: {}), UserFunctionResult(X: [622], Y: [3031015.30919483], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [622.], Val: 3031015.309194828

Network Param Scenario: 33 % Discount, Surge Scenario: solar

Wind: 1.0, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:10, 50.02s/it]  7%|▋         | 2/30 [00:50<09:44, 20.88s/it] 10%|█         | 3/30 [00:51<05:13, 11.61s/it] 13%|█▎        | 4/30 [00:51<03:06,  7.17s/it] 17%|█▋        | 5/30 [00:51<01:59,  4.79s/it] 20%|██        | 6/30 [01:42<08:05, 20.21s/it] 23%|██▎       | 7/30 [01:43<05:20, 13.92s/it] 27%|██▋       | 8/30 [01:44<03:37,  9.87s/it] 30%|███       | 9/30 [01:44<02:26,  6.97s/it] 33%|███▎      | 10/30 [01:46<01:44,  5.24s/it] 37%|███▋      | 11/30 [02:36<06:01, 19.04s/it] 40%|████      | 12/30 [02:38<04:06, 13.71s/it] 43%|████▎     | 13/30 [02:39<02:51, 10.07s/it] 47%|████▋     | 14/30 [02:40<01:57,  7.32s/it] 50%|█████     | 15/30 [02:42<01:25,  5.72s/it] 53%|█████▎    | 16/30 [03:33<04:28, 19.16s/it] 57%|█████▋    | 17/30 [03:35<03:02, 14.01s/it] 60%|██████    | 18/30 [03:37<02:05, 10.45s/it] 63%|██████▎   | 19/30 [03:38<01:25,  7.73s/it] 67%|██████▋   | 20/30 [03:41<01:02,  6.26s/it] 70%|███████   | 21/30 [04:32<02:55, 19.52s/it] 73%|███████▎  | 22/30 [04:34<01:56, 14.52s/it] 77%|███████▋  | 23/30 [04:37<01:16, 10.94s/it] 80%|████████  | 24/30 [04:39<00:48,  8.16s/it] 83%|████████▎ | 25/30 [04:42<00:33,  6.71s/it] 87%|████████▋ | 26/30 [05:33<01:19, 19.95s/it] 90%|█████████ | 27/30 [05:36<00:44, 14.97s/it] 93%|█████████▎| 28/30 [05:39<00:22, 11.33s/it] 97%|█████████▋| 29/30 [05:41<00:08,  8.45s/it]100%|██████████| 30/30 [05:43<00:00,  6.65s/it]100%|██████████| 30/30 [05:43<00:00, 11.46s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[742]
 [  0]
 [  0]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 344.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:52<01:45, 52.88s/it]100%|██████████| 3/3 [00:52<00:00, 17.63s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [742], Y: [710594.77566972], extra_outputs: {}), UserFunctionResult(X: [0], Y: [1242152.48], extra_outputs: {}), UserFunctionResult(X: [0], Y: [1242152.48], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[737]
 [737]
 [737]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:55<01:51, 55.65s/it]100%|██████████| 3/3 [00:55<00:00, 18.55s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [737], Y: [710594.84548327], extra_outputs: {}), UserFunctionResult(X: [737], Y: [710594.84548327], extra_outputs: {}), UserFunctionResult(X: [737], Y: [710594.84548327], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [742.], Val: 710594.7756697194

Network Param Scenario: 33 % Discount, Surge Scenario: solar

Wind: 1.0, Solar: 1.2

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:14, 50.14s/it]  7%|▋         | 2/30 [00:50<09:48, 21.00s/it] 10%|█         | 3/30 [00:51<05:13, 11.60s/it] 13%|█▎        | 4/30 [00:51<03:06,  7.18s/it] 17%|█▋        | 5/30 [00:52<01:58,  4.75s/it] 20%|██        | 6/30 [01:42<08:05, 20.25s/it] 23%|██▎       | 7/30 [01:43<05:21, 13.98s/it] 27%|██▋       | 8/30 [01:44<03:35,  9.80s/it] 30%|███       | 9/30 [01:45<02:27,  7.00s/it] 33%|███▎      | 10/30 [01:45<01:42,  5.11s/it] 37%|███▋      | 11/30 [02:36<06:03, 19.13s/it] 40%|████      | 12/30 [02:38<04:08, 13.80s/it] 43%|████▎     | 13/30 [02:39<02:49,  9.96s/it] 47%|████▋     | 14/30 [02:41<01:58,  7.38s/it] 50%|█████     | 15/30 [02:42<01:22,  5.53s/it] 53%|█████▎    | 16/30 [03:33<04:28, 19.21s/it] 57%|█████▋    | 17/30 [03:35<03:02, 14.07s/it] 60%|██████    | 18/30 [03:37<02:04, 10.36s/it] 63%|██████▎   | 19/30 [03:38<01:25,  7.76s/it] 67%|██████▋   | 20/30 [03:40<00:59,  5.93s/it] 70%|███████   | 21/30 [04:32<02:56, 19.63s/it] 73%|███████▎  | 22/30 [04:34<01:56, 14.54s/it] 77%|███████▋  | 23/30 [04:36<01:15, 10.81s/it] 80%|████████  | 24/30 [04:38<00:48,  8.16s/it] 83%|████████▎ | 25/30 [04:41<00:31,  6.37s/it] 87%|████████▋ | 26/30 [05:32<01:20, 20.02s/it] 90%|█████████ | 27/30 [05:35<00:44, 14.93s/it] 93%|█████████▎| 28/30 [05:38<00:22, 11.16s/it] 97%|█████████▋| 29/30 [05:40<00:08,  8.40s/it]100%|██████████| 30/30 [05:42<00:00,  6.42s/it]100%|██████████| 30/30 [05:42<00:00, 11.40s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[742]
 [742]
 [742]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 342.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:55<01:50, 55.42s/it]100%|██████████| 3/3 [00:55<00:00, 18.47s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [742], Y: [-623529.86833028], extra_outputs: {}), UserFunctionResult(X: [742], Y: [-623529.86833028], extra_outputs: {}), UserFunctionResult(X: [742], Y: [-623529.86833028], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[750]
 [750]
 [750]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:55<01:51, 55.52s/it]100%|██████████| 3/3 [00:55<00:00, 18.52s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [750], Y: [-623745.59603195], extra_outputs: {}), UserFunctionResult(X: [750], Y: [-623745.59603195], extra_outputs: {}), UserFunctionResult(X: [750], Y: [-623745.59603195], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [750.], Val: -623745.596031952

Network Param Scenario: 33 % Discount, Surge Scenario: solar

Wind: 1.0, Solar: 1.7

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:19, 50.32s/it]  7%|▋         | 2/30 [00:50<09:49, 21.05s/it] 10%|█         | 3/30 [00:51<05:13, 11.59s/it] 13%|█▎        | 4/30 [00:51<03:07,  7.23s/it] 17%|█▋        | 5/30 [00:52<01:57,  4.71s/it] 20%|██        | 6/30 [01:42<08:04, 20.19s/it] 23%|██▎       | 7/30 [01:43<05:21, 13.98s/it] 27%|██▋       | 8/30 [01:44<03:34,  9.76s/it] 30%|███       | 9/30 [01:45<02:27,  7.01s/it] 33%|███▎      | 10/30 [01:45<01:40,  5.03s/it] 37%|███▋      | 11/30 [02:36<06:00, 18.97s/it] 40%|████      | 12/30 [02:38<04:07, 13.73s/it] 43%|████▎     | 13/30 [02:39<02:48,  9.89s/it] 47%|████▋     | 14/30 [02:40<01:57,  7.34s/it] 50%|█████     | 15/30 [02:41<01:20,  5.36s/it] 53%|█████▎    | 16/30 [03:32<04:27, 19.12s/it] 57%|█████▋    | 17/30 [03:34<03:02, 14.06s/it] 60%|██████    | 18/30 [03:36<02:03, 10.28s/it] 63%|██████▎   | 19/30 [03:38<01:25,  7.78s/it] 67%|██████▋   | 20/30 [03:39<00:57,  5.73s/it] 70%|███████   | 21/30 [04:30<02:55, 19.48s/it] 73%|███████▎  | 22/30 [04:33<01:55, 14.47s/it] 77%|███████▋  | 23/30 [04:35<01:14, 10.68s/it] 80%|████████  | 24/30 [04:37<00:49,  8.20s/it] 83%|████████▎ | 25/30 [04:38<00:30,  6.08s/it] 87%|████████▋ | 26/30 [05:30<01:19, 19.79s/it] 90%|█████████ | 27/30 [05:33<00:44, 14.85s/it] 93%|█████████▎| 28/30 [05:36<00:22, 11.04s/it] 97%|█████████▋| 29/30 [05:38<00:08,  8.45s/it]100%|██████████| 30/30 [05:39<00:00,  6.22s/it]100%|██████████| 30/30 [05:39<00:00, 11.32s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[650]
 [650]
 [650]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 340.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:53<01:47, 53.81s/it]100%|██████████| 3/3 [00:53<00:00, 17.94s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [650], Y: [-3696939.68376103], extra_outputs: {}), UserFunctionResult(X: [650], Y: [-3696939.68376103], extra_outputs: {}), UserFunctionResult(X: [650], Y: [-3696939.68376103], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[646]
 [646]
 [646]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:53<01:47, 53.94s/it]100%|██████████| 3/3 [00:53<00:00, 17.98s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [646], Y: [-3696993.5319102], extra_outputs: {}), UserFunctionResult(X: [646], Y: [-3696993.5319102], extra_outputs: {}), UserFunctionResult(X: [646], Y: [-3696993.5319102], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [646.], Val: -3696993.5319101997

Network Param Scenario: 33 % Discount, Surge Scenario: solar

Wind: 1.0, Solar: 2.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:31, 50.74s/it]  7%|▋         | 2/30 [00:51<09:52, 21.15s/it] 10%|█         | 3/30 [00:51<05:14, 11.65s/it] 13%|█▎        | 4/30 [00:51<03:07,  7.22s/it] 17%|█▋        | 5/30 [00:52<01:59,  4.76s/it] 20%|██        | 6/30 [01:43<08:08, 20.37s/it] 23%|██▎       | 7/30 [01:43<05:21, 13.99s/it] 27%|██▋       | 8/30 [01:44<03:34,  9.73s/it] 30%|███       | 9/30 [01:45<02:25,  6.95s/it] 33%|███▎      | 10/30 [01:46<01:41,  5.05s/it] 37%|███▋      | 11/30 [02:37<06:04, 19.16s/it] 40%|████      | 12/30 [02:38<04:07, 13.72s/it] 43%|████▎     | 13/30 [02:39<02:46,  9.79s/it] 47%|████▋     | 14/30 [02:40<01:56,  7.26s/it] 50%|█████     | 15/30 [02:41<01:21,  5.43s/it] 53%|█████▎    | 16/30 [03:33<04:29, 19.27s/it] 57%|█████▋    | 17/30 [03:35<03:02, 14.01s/it] 60%|██████    | 18/30 [03:36<02:01, 10.10s/it] 63%|██████▎   | 19/30 [03:37<01:23,  7.63s/it] 67%|██████▋   | 20/30 [03:39<00:58,  5.84s/it] 70%|███████   | 21/30 [04:31<02:56, 19.59s/it] 73%|███████▎  | 22/30 [04:33<01:54, 14.37s/it] 77%|███████▋  | 23/30 [04:34<01:13, 10.47s/it] 80%|████████  | 24/30 [04:37<00:48,  8.04s/it] 83%|████████▎ | 25/30 [04:39<00:31,  6.22s/it] 87%|████████▋ | 26/30 [05:31<01:19, 19.97s/it] 90%|█████████ | 27/30 [05:33<00:44, 14.76s/it] 93%|█████████▎| 28/30 [05:35<00:21, 10.73s/it] 97%|█████████▋| 29/30 [05:37<00:08,  8.27s/it]100%|██████████| 30/30 [05:39<00:00,  6.24s/it]100%|██████████| 30/30 [05:39<00:00, 11.31s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[357]
 [727]
 [975]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 339.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:50<01:41, 50.59s/it] 67%|██████▋   | 2/3 [00:54<00:22, 22.92s/it]100%|██████████| 3/3 [00:55<00:00, 13.22s/it]100%|██████████| 3/3 [00:55<00:00, 18.61s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [357], Y: [-5473651.20268722], extra_outputs: {}), UserFunctionResult(X: [727], Y: [-5500123.23288963], extra_outputs: {}), UserFunctionResult(X: [975], Y: [-5432652.36364153], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[662]
 [388]
 [884]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:53<01:46, 53.44s/it]100%|██████████| 3/3 [00:54<00:00, 14.43s/it]100%|██████████| 3/3 [00:54<00:00, 18.33s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [662], Y: [-5507412.84131354], extra_outputs: {}), UserFunctionResult(X: [388], Y: [-5482303.22753119], extra_outputs: {}), UserFunctionResult(X: [884], Y: [-5463470.70503498], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 2
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[975]
 [662]
 [662]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:55<01:51, 55.84s/it]100%|██████████| 3/3 [00:55<00:00, 18.61s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [975], Y: [-5432652.36364153], extra_outputs: {}), UserFunctionResult(X: [662], Y: [-5507412.84131354], extra_outputs: {}), UserFunctionResult(X: [662], Y: [-5507412.84131354], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [620.68965517], Val: -5508678.998879763

Network Param Scenario: 33 % Discount, Surge Scenario: wind

Wind: 0.1, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:16, 50.21s/it]  7%|▋         | 2/30 [00:50<09:46, 20.93s/it] 10%|█         | 3/30 [00:51<05:13, 11.60s/it] 13%|█▎        | 4/30 [00:51<03:04,  7.11s/it] 17%|█▋        | 5/30 [00:51<01:57,  4.70s/it] 20%|██        | 6/30 [01:42<08:05, 20.25s/it] 23%|██▎       | 7/30 [01:43<05:20, 13.93s/it] 27%|██▋       | 8/30 [01:44<03:35,  9.78s/it] 30%|███       | 9/30 [01:44<02:25,  6.92s/it] 33%|███▎      | 10/30 [01:45<01:40,  5.02s/it] 37%|███▋      | 11/30 [02:36<06:02, 19.07s/it] 40%|████      | 12/30 [02:37<04:06, 13.69s/it] 43%|████▎     | 13/30 [02:39<02:48,  9.93s/it] 47%|████▋     | 14/30 [02:40<01:55,  7.23s/it] 50%|█████     | 15/30 [02:41<01:20,  5.37s/it] 53%|█████▎    | 16/30 [03:32<04:29, 19.25s/it] 57%|█████▋    | 17/30 [03:34<03:01, 14.00s/it] 60%|██████    | 18/30 [03:36<02:03, 10.33s/it] 63%|██████▎   | 19/30 [03:37<01:23,  7.63s/it] 67%|██████▋   | 20/30 [03:38<00:57,  5.76s/it] 70%|███████   | 21/30 [04:30<02:56, 19.56s/it] 73%|███████▎  | 22/30 [04:32<01:55, 14.39s/it] 77%|███████▋  | 23/30 [04:35<01:14, 10.70s/it] 80%|████████  | 24/30 [04:36<00:48,  8.03s/it] 83%|████████▎ | 25/30 [04:38<00:30,  6.13s/it] 87%|████████▋ | 26/30 [05:30<01:19, 19.95s/it] 90%|█████████ | 27/30 [05:33<00:44, 14.80s/it] 93%|█████████▎| 28/30 [05:35<00:22, 11.08s/it] 97%|█████████▋| 29/30 [05:37<00:08,  8.29s/it]100%|██████████| 30/30 [05:39<00:00,  6.21s/it]100%|██████████| 30/30 [05:39<00:00, 11.30s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[583]
 [583]
 [583]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 339.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:52<01:45, 52.86s/it]100%|██████████| 3/3 [00:52<00:00, 17.62s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [583], Y: [7909963.81974045], extra_outputs: {}), UserFunctionResult(X: [583], Y: [7909963.81974045], extra_outputs: {}), UserFunctionResult(X: [583], Y: [7909963.81974045], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[1000]
 [ 999]
 [ 996]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:57<01:54, 57.47s/it]100%|██████████| 3/3 [00:57<00:00, 19.16s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [1000], Y: [8017833.37729074], extra_outputs: {}), UserFunctionResult(X: [999], Y: [8017361.7312534], extra_outputs: {}), UserFunctionResult(X: [996], Y: [8015946.79314155], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 2
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[0]
 [0]
 [1]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:46<01:33, 46.74s/it]100%|██████████| 3/3 [00:46<00:00, 15.58s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [0], Y: [8175583.92], extra_outputs: {}), UserFunctionResult(X: [0], Y: [8175583.92], extra_outputs: {}), UserFunctionResult(X: [1], Y: [8174424.97003725], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 3
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[ 999]
 [1000]
 [1000]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:57<01:55, 57.72s/it]100%|██████████| 3/3 [00:57<00:00, 19.25s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [999], Y: [8017361.7312534], extra_outputs: {}), UserFunctionResult(X: [1000], Y: [8017833.37729074], extra_outputs: {}), UserFunctionResult(X: [1000], Y: [8017833.37729074], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [583.], Val: 7909963.819740449

Network Param Scenario: 33 % Discount, Surge Scenario: wind

Wind: 0.5, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:11, 50.05s/it]  7%|▋         | 2/30 [00:50<09:43, 20.85s/it] 10%|█         | 3/30 [00:51<05:14, 11.63s/it] 13%|█▎        | 4/30 [00:51<03:05,  7.13s/it] 17%|█▋        | 5/30 [00:51<01:58,  4.76s/it] 20%|██        | 6/30 [01:42<08:05, 20.21s/it] 23%|██▎       | 7/30 [01:42<05:19, 13.88s/it] 27%|██▋       | 8/30 [01:44<03:36,  9.86s/it] 30%|███       | 9/30 [01:44<02:25,  6.92s/it] 33%|███▎      | 10/30 [01:45<01:43,  5.17s/it] 37%|███▋      | 11/30 [02:36<06:02, 19.07s/it] 40%|████      | 12/30 [02:37<04:05, 13.66s/it] 43%|████▎     | 13/30 [02:39<02:51, 10.07s/it] 47%|████▋     | 14/30 [02:40<01:55,  7.24s/it] 50%|█████     | 15/30 [02:42<01:24,  5.63s/it] 53%|█████▎    | 16/30 [03:32<04:29, 19.22s/it] 57%|█████▋    | 17/30 [03:34<03:01, 13.98s/it] 60%|██████    | 18/30 [03:37<02:05, 10.46s/it] 63%|██████▎   | 19/30 [03:38<01:24,  7.70s/it] 67%|██████▋   | 20/30 [03:40<01:01,  6.12s/it] 70%|███████   | 21/30 [04:31<02:56, 19.64s/it] 73%|███████▎  | 22/30 [04:34<01:55, 14.43s/it] 77%|███████▋  | 23/30 [04:36<01:16, 10.94s/it] 80%|████████  | 24/30 [04:38<00:48,  8.04s/it] 83%|████████▎ | 25/30 [04:41<00:32,  6.50s/it] 87%|████████▋ | 26/30 [05:33<01:20, 20.10s/it] 90%|█████████ | 27/30 [05:35<00:44, 14.83s/it] 93%|█████████▎| 28/30 [05:38<00:22, 11.34s/it] 97%|█████████▋| 29/30 [05:40<00:08,  8.35s/it]100%|██████████| 30/30 [05:42<00:00,  6.47s/it]100%|██████████| 30/30 [05:42<00:00, 11.41s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[ 609]
 [1000]
 [ 609]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 342.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:53<01:47, 53.87s/it] 67%|██████▋   | 2/3 [00:56<00:23, 23.91s/it]100%|██████████| 3/3 [00:56<00:00, 18.94s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [609], Y: [4583720.87271007], extra_outputs: {}), UserFunctionResult(X: [1000], Y: [4675284.83329074], extra_outputs: {}), UserFunctionResult(X: [609], Y: [4583720.87271007], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[634]
 [634]
 [634]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:54<01:48, 54.17s/it]100%|██████████| 3/3 [00:54<00:00, 18.07s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [634], Y: [4583653.14364233], extra_outputs: {}), UserFunctionResult(X: [634], Y: [4583653.14364233], extra_outputs: {}), UserFunctionResult(X: [634], Y: [4583653.14364233], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [634.], Val: 4583653.143642332

Network Param Scenario: 33 % Discount, Surge Scenario: wind

Wind: 0.7, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:14, 50.14s/it]  7%|▋         | 2/30 [00:50<09:43, 20.85s/it] 10%|█         | 3/30 [00:51<05:13, 11.60s/it] 13%|█▎        | 4/30 [00:51<03:07,  7.19s/it] 17%|█▋        | 5/30 [00:51<01:58,  4.75s/it] 20%|██        | 6/30 [01:42<08:07, 20.32s/it] 23%|██▎       | 7/30 [01:43<05:19, 13.88s/it] 27%|██▋       | 8/30 [01:44<03:37,  9.87s/it] 30%|███       | 9/30 [01:45<02:27,  7.03s/it] 33%|███▎      | 10/30 [01:46<01:43,  5.16s/it] 37%|███▋      | 11/30 [02:37<06:03, 19.15s/it] 40%|████      | 12/30 [02:37<04:05, 13.62s/it] 43%|████▎     | 13/30 [02:39<02:50, 10.04s/it] 47%|████▋     | 14/30 [02:41<01:58,  7.39s/it] 50%|█████     | 15/30 [02:42<01:23,  5.56s/it] 53%|█████▎    | 16/30 [03:33<04:31, 19.38s/it] 57%|█████▋    | 17/30 [03:35<03:01, 13.99s/it] 60%|██████    | 18/30 [03:37<02:05, 10.48s/it] 63%|██████▎   | 19/30 [03:39<01:26,  7.88s/it] 67%|██████▋   | 20/30 [03:41<01:00,  6.07s/it] 70%|███████   | 21/30 [04:33<02:57, 19.77s/it] 73%|███████▎  | 22/30 [04:34<01:55, 14.40s/it] 77%|███████▋  | 23/30 [04:37<01:16, 10.94s/it] 80%|████████  | 24/30 [04:39<00:49,  8.28s/it] 83%|████████▎ | 25/30 [04:41<00:32,  6.43s/it] 87%|████████▋ | 26/30 [05:34<01:21, 20.25s/it] 90%|█████████ | 27/30 [05:36<00:44, 14.84s/it] 93%|█████████▎| 28/30 [05:40<00:22, 11.40s/it] 97%|█████████▋| 29/30 [05:42<00:08,  8.60s/it]100%|██████████| 30/30 [05:43<00:00,  6.49s/it]100%|██████████| 30/30 [05:43<00:00, 11.46s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[691]
 [691]
 [  0]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 344.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:54<01:48, 54.41s/it]100%|██████████| 3/3 [00:54<00:00, 18.14s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [691], Y: [2960632.82376789], extra_outputs: {}), UserFunctionResult(X: [691], Y: [2960632.82376789], extra_outputs: {}), UserFunctionResult(X: [0], Y: [3422303.28], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[689]
 [689]
 [689]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:55<01:50, 55.12s/it]100%|██████████| 3/3 [00:55<00:00, 18.37s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [689], Y: [2960686.75569333], extra_outputs: {}), UserFunctionResult(X: [689], Y: [2960686.75569333], extra_outputs: {}), UserFunctionResult(X: [689], Y: [2960686.75569333], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [691.], Val: 2960632.823767887

Network Param Scenario: 33 % Discount, Surge Scenario: wind

Wind: 1.0, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:49<24:05, 49.85s/it]  7%|▋         | 2/30 [00:50<09:43, 20.83s/it] 10%|█         | 3/30 [00:50<05:12, 11.56s/it] 13%|█▎        | 4/30 [00:51<03:05,  7.13s/it] 17%|█▋        | 5/30 [00:51<01:58,  4.74s/it] 20%|██        | 6/30 [01:42<08:07, 20.32s/it] 23%|██▎       | 7/30 [01:43<05:21, 14.00s/it] 27%|██▋       | 8/30 [01:44<03:37,  9.89s/it] 30%|███       | 9/30 [01:45<02:27,  7.02s/it] 33%|███▎      | 10/30 [01:46<01:43,  5.17s/it] 37%|███▋      | 11/30 [02:36<06:02, 19.08s/it] 40%|████      | 12/30 [02:38<04:07, 13.74s/it] 43%|████▎     | 13/30 [02:40<02:51, 10.11s/it] 47%|████▋     | 14/30 [02:40<01:57,  7.33s/it] 50%|█████     | 15/30 [02:42<01:23,  5.56s/it] 53%|█████▎    | 16/30 [03:33<04:29, 19.26s/it] 57%|█████▋    | 17/30 [03:35<03:02, 14.07s/it] 60%|██████    | 18/30 [03:37<02:06, 10.53s/it] 63%|██████▎   | 19/30 [03:39<01:25,  7.74s/it] 67%|██████▋   | 20/30 [03:41<01:00,  6.02s/it] 70%|███████   | 21/30 [04:32<02:57, 19.70s/it] 73%|███████▎  | 22/30 [04:35<01:56, 14.56s/it] 77%|███████▋  | 23/30 [04:38<01:17, 11.04s/it] 80%|████████  | 24/30 [04:39<00:49,  8.19s/it] 83%|████████▎ | 25/30 [04:42<00:32,  6.48s/it] 87%|████████▋ | 26/30 [05:33<01:20, 20.05s/it] 90%|█████████ | 27/30 [05:36<00:44, 14.96s/it] 93%|█████████▎| 28/30 [05:39<00:22, 11.41s/it] 97%|█████████▋| 29/30 [05:41<00:08,  8.45s/it]100%|██████████| 30/30 [05:43<00:00,  6.51s/it]100%|██████████| 30/30 [05:43<00:00, 11.45s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[741]
 [741]
 [741]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 344.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:55<01:51, 55.51s/it]100%|██████████| 3/3 [00:55<00:00, 18.52s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [741], Y: [710594.78963243], extra_outputs: {}), UserFunctionResult(X: [741], Y: [710594.78963243], extra_outputs: {}), UserFunctionResult(X: [741], Y: [710594.78963243], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[744]
 [726]
 [738]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:55<01:51, 55.61s/it]100%|██████████| 3/3 [00:55<00:00, 18.54s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [744], Y: [710594.7477443], extra_outputs: {}), UserFunctionResult(X: [726], Y: [710594.99907307], extra_outputs: {}), UserFunctionResult(X: [738], Y: [710594.83152056], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 2
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[737]
 [737]
 [737]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:55<01:51, 55.66s/it]100%|██████████| 3/3 [00:55<00:00, 18.58s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [737], Y: [710594.84548327], extra_outputs: {}), UserFunctionResult(X: [737], Y: [710594.84548327], extra_outputs: {}), UserFunctionResult(X: [737], Y: [710594.84548327], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [744.], Val: 710594.7477443033

Network Param Scenario: 33 % Discount, Surge Scenario: wind

Wind: 1.2, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:14, 50.16s/it]  7%|▋         | 2/30 [00:50<09:44, 20.87s/it] 10%|█         | 3/30 [00:51<05:13, 11.60s/it] 13%|█▎        | 4/30 [00:51<03:06,  7.19s/it] 17%|█▋        | 5/30 [00:51<01:59,  4.77s/it] 20%|██        | 6/30 [01:42<08:07, 20.30s/it] 23%|██▎       | 7/30 [01:43<05:19, 13.90s/it] 27%|██▋       | 8/30 [01:44<03:36,  9.85s/it] 30%|███       | 9/30 [01:45<02:27,  7.02s/it] 33%|███▎      | 10/30 [01:46<01:43,  5.19s/it] 37%|███▋      | 11/30 [02:37<06:03, 19.14s/it] 40%|████      | 12/30 [02:38<04:05, 13.64s/it] 43%|████▎     | 13/30 [02:39<02:50, 10.06s/it] 47%|████▋     | 14/30 [02:41<01:57,  7.37s/it] 50%|█████     | 15/30 [02:42<01:24,  5.62s/it] 53%|█████▎    | 16/30 [03:33<04:30, 19.33s/it] 57%|█████▋    | 17/30 [03:35<03:00, 13.92s/it] 60%|██████    | 18/30 [03:37<02:05, 10.48s/it] 63%|██████▎   | 19/30 [03:39<01:25,  7.79s/it] 67%|██████▋   | 20/30 [03:41<01:00,  6.05s/it] 70%|███████   | 21/30 [04:32<02:57, 19.77s/it] 73%|███████▎  | 22/30 [04:34<01:54, 14.35s/it] 77%|███████▋  | 23/30 [04:37<01:16, 10.98s/it] 80%|████████  | 24/30 [04:39<00:49,  8.22s/it] 83%|████████▎ | 25/30 [04:41<00:32,  6.49s/it] 87%|████████▋ | 26/30 [05:33<01:20, 20.10s/it] 90%|█████████ | 27/30 [05:35<00:44, 14.68s/it] 93%|█████████▎| 28/30 [05:39<00:22, 11.31s/it] 97%|█████████▋| 29/30 [05:41<00:08,  8.50s/it]100%|██████████| 30/30 [05:43<00:00,  6.49s/it]100%|██████████| 30/30 [05:43<00:00, 11.43s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[1000]
 [1000]
 [   0]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 343.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:57<01:54, 57.33s/it]100%|██████████| 3/3 [00:57<00:00, 19.11s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [1000], Y: [-560275.56070928], extra_outputs: {}), UserFunctionResult(X: [1000], Y: [-560275.56070928], extra_outputs: {}), UserFunctionResult(X: [0], Y: [-122318.55], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[692]
 [692]
 [692]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:54<01:49, 54.78s/it]100%|██████████| 3/3 [00:54<00:00, 18.26s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [692], Y: [-616088.85219481], extra_outputs: {}), UserFunctionResult(X: [692], Y: [-616088.85219481], extra_outputs: {}), UserFunctionResult(X: [692], Y: [-616088.85219481], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [692.], Val: -616088.8521948102

Network Param Scenario: 33 % Discount, Surge Scenario: wind

Wind: 1.7, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:16, 50.21s/it]  7%|▋         | 2/30 [00:50<09:44, 20.88s/it] 10%|█         | 3/30 [00:50<05:10, 11.50s/it] 13%|█▎        | 4/30 [00:51<03:03,  7.05s/it] 17%|█▋        | 5/30 [00:51<01:56,  4.67s/it] 20%|██        | 6/30 [01:42<08:10, 20.42s/it] 23%|██▎       | 7/30 [01:43<05:21, 13.98s/it] 27%|██▋       | 8/30 [01:43<03:33,  9.71s/it] 30%|███       | 9/30 [01:44<02:24,  6.86s/it] 33%|███▎      | 10/30 [01:45<01:40,  5.02s/it] 37%|███▋      | 11/30 [02:37<06:06, 19.31s/it] 40%|████      | 12/30 [02:38<04:07, 13.77s/it] 43%|████▎     | 13/30 [02:38<02:47,  9.85s/it] 47%|████▋     | 14/30 [02:40<01:54,  7.18s/it] 50%|█████     | 15/30 [02:41<01:21,  5.41s/it] 53%|█████▎    | 16/30 [03:33<04:32, 19.49s/it] 57%|█████▋    | 17/30 [03:35<03:03, 14.09s/it] 60%|██████    | 18/30 [03:36<02:01, 10.15s/it] 63%|██████▎   | 19/30 [03:37<01:23,  7.58s/it] 67%|██████▋   | 20/30 [03:39<00:57,  5.79s/it] 70%|███████   | 21/30 [04:31<02:58, 19.86s/it] 73%|███████▎  | 22/30 [04:33<01:56, 14.53s/it] 77%|███████▋  | 23/30 [04:35<01:13, 10.48s/it] 80%|████████  | 24/30 [04:37<00:47,  7.99s/it] 83%|████████▎ | 25/30 [04:39<00:31,  6.21s/it] 87%|████████▋ | 26/30 [05:32<01:21, 20.33s/it] 90%|█████████ | 27/30 [05:35<00:44, 14.98s/it] 93%|█████████▎| 28/30 [05:36<00:21, 10.82s/it] 97%|█████████▋| 29/30 [05:38<00:08,  8.18s/it]100%|██████████| 30/30 [05:39<00:00,  6.18s/it]100%|██████████| 30/30 [05:39<00:00, 11.32s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[650]
 [650]
 [650]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 340.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:53<01:47, 53.79s/it] 67%|██████▋   | 2/3 [00:53<00:22, 22.21s/it]100%|██████████| 3/3 [00:53<00:00, 17.96s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [650], Y: [-3783731.62376104], extra_outputs: {}), UserFunctionResult(X: [650], Y: [-3783731.62376104], extra_outputs: {}), UserFunctionResult(X: [650], Y: [-3783731.62376104], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[644]
 [643]
 [643]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:54<01:48, 54.12s/it]100%|██████████| 3/3 [00:54<00:00, 18.06s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [644], Y: [-3783771.96798476], extra_outputs: {}), UserFunctionResult(X: [643], Y: [-3783745.00202207], extra_outputs: {}), UserFunctionResult(X: [643], Y: [-3783745.00202207], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [644.], Val: -3783771.96798476

Network Param Scenario: 33 % Discount, Surge Scenario: wind

Wind: 2.0, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [00:50<24:14, 50.16s/it]  7%|▋         | 2/30 [00:50<09:44, 20.89s/it] 10%|█         | 3/30 [00:50<05:11, 11.55s/it] 13%|█▎        | 4/30 [00:51<03:05,  7.15s/it] 17%|█▋        | 5/30 [00:51<01:56,  4.65s/it] 20%|██        | 6/30 [01:42<08:07, 20.32s/it] 23%|██▎       | 7/30 [01:43<05:19, 13.90s/it] 27%|██▋       | 8/30 [01:43<03:34,  9.76s/it] 30%|███       | 9/30 [01:44<02:26,  6.99s/it] 33%|███▎      | 10/30 [01:45<01:40,  5.02s/it] 37%|███▋      | 11/30 [02:36<06:03, 19.16s/it] 40%|████      | 12/30 [02:37<04:05, 13.62s/it] 43%|████▎     | 13/30 [02:39<02:49,  9.97s/it] 47%|████▋     | 14/30 [02:40<01:57,  7.35s/it] 50%|█████     | 15/30 [02:41<01:20,  5.39s/it] 53%|█████▎    | 16/30 [03:33<04:32, 19.48s/it] 57%|█████▋    | 17/30 [03:34<03:01, 13.98s/it] 60%|██████    | 18/30 [03:36<02:04, 10.37s/it] 63%|██████▎   | 19/30 [03:38<01:25,  7.79s/it] 67%|██████▋   | 20/30 [03:39<00:58,  5.83s/it] 70%|███████   | 21/30 [04:31<02:57, 19.76s/it] 73%|███████▎  | 22/30 [04:33<01:54, 14.28s/it] 77%|███████▋  | 23/30 [04:35<01:15, 10.73s/it] 80%|████████  | 24/30 [04:37<00:48,  8.10s/it] 83%|████████▎ | 25/30 [04:39<00:30,  6.13s/it] 87%|████████▋ | 26/30 [05:32<01:20, 20.19s/it] 90%|█████████ | 27/30 [05:34<00:43, 14.62s/it] 93%|█████████▎| 28/30 [05:36<00:22, 11.02s/it] 97%|█████████▋| 29/30 [05:38<00:08,  8.37s/it]100%|██████████| 30/30 [05:39<00:00,  6.20s/it]100%|██████████| 30/30 [05:39<00:00, 11.33s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[ 86]
 [451]
 [198]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 340.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:47<01:35, 47.61s/it] 67%|██████▋   | 2/3 [00:50<00:21, 21.36s/it]100%|██████████| 3/3 [00:50<00:00, 16.86s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [86], Y: [-5439274.33079302], extra_outputs: {}), UserFunctionResult(X: [451], Y: [-5640300.91918187], extra_outputs: {}), UserFunctionResult(X: [198], Y: [-5539389.09861643], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[ 64]
 [315]
 [453]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:47<01:34, 47.45s/it] 67%|██████▋   | 2/3 [00:49<00:21, 21.01s/it]100%|██████████| 3/3 [00:51<00:00, 11.90s/it]100%|██████████| 3/3 [00:51<00:00, 17.00s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [64], Y: [-5414909.41561335], extra_outputs: {}), UserFunctionResult(X: [315], Y: [-5609250.31625338], extra_outputs: {}), UserFunctionResult(X: [453], Y: [-5640462.65910727], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 2
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[467]
 [ 86]
 [ 86]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:50<01:40, 50.41s/it]100%|██████████| 3/3 [00:50<00:00, 16.80s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [467], Y: [-5641594.83858525], extra_outputs: {}), UserFunctionResult(X: [86], Y: [-5439274.33079302], extra_outputs: {}), UserFunctionResult(X: [86], Y: [-5439274.33079302], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [586.20689655], Val: -5647714.60414761

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: solar

Wind: 1.0, Solar: 0.1

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [02:30<1:12:47, 150.60s/it]  7%|▋         | 2/30 [02:31<29:16, 62.73s/it]    10%|█         | 3/30 [02:33<15:35, 34.66s/it] 13%|█▎        | 4/30 [02:34<09:18, 21.48s/it] 17%|█▋        | 5/30 [02:35<05:55, 14.20s/it] 20%|██        | 6/30 [05:07<24:22, 60.95s/it] 23%|██▎       | 7/30 [05:09<16:02, 41.86s/it] 27%|██▋       | 8/30 [05:12<10:46, 29.41s/it] 30%|███       | 9/30 [05:15<07:20, 20.97s/it] 33%|███▎      | 10/30 [05:18<05:08, 15.41s/it] 37%|███▋      | 11/30 [07:50<18:11, 57.47s/it] 40%|████      | 12/30 [07:54<12:20, 41.16s/it] 43%|████▎     | 13/30 [07:58<08:27, 29.87s/it] 47%|████▋     | 14/30 [08:02<05:51, 21.98s/it] 50%|█████     | 15/30 [08:06<04:09, 16.66s/it] 53%|█████▎    | 16/30 [10:40<13:32, 58.07s/it] 57%|█████▋    | 17/30 [10:45<09:07, 42.13s/it] 60%|██████    | 18/30 [10:51<06:12, 31.07s/it] 63%|██████▎   | 19/30 [10:56<04:15, 23.26s/it] 67%|██████▋   | 20/30 [11:02<03:00, 18.03s/it] 70%|███████   | 21/30 [13:37<08:52, 59.19s/it] 73%|███████▎  | 22/30 [13:43<05:47, 43.41s/it] 77%|███████▋  | 23/30 [13:50<03:47, 32.46s/it] 80%|████████  | 24/30 [13:57<02:27, 24.57s/it] 83%|████████▎ | 25/30 [14:04<01:36, 19.40s/it] 87%|████████▋ | 26/30 [16:40<04:01, 60.42s/it] 90%|█████████ | 27/30 [16:48<02:13, 44.55s/it] 93%|█████████▎| 28/30 [16:55<01:06, 33.48s/it] 97%|█████████▋| 29/30 [17:02<00:25, 25.42s/it]100%|██████████| 30/30 [17:07<00:00, 19.46s/it]100%|██████████| 30/30 [17:07<00:00, 34.26s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[786]
 [640]
 [702]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 1028.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:45<05:31, 165.92s/it]100%|██████████| 3/3 [02:45<00:00, 55.31s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [786], Y: [10505545.14899552], extra_outputs: {}), UserFunctionResult(X: [640], Y: [10363030.30771779], extra_outputs: {}), UserFunctionResult(X: [702], Y: [10420389.46633561], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[0]
 [0]
 [0]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:20<04:40, 140.30s/it]100%|██████████| 3/3 [02:20<00:00, 36.42s/it] 100%|██████████| 3/3 [02:20<00:00, 46.81s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [0], Y: [10604046.16], extra_outputs: {}), UserFunctionResult(X: [0], Y: [10604046.16], extra_outputs: {}), UserFunctionResult(X: [0], Y: [10604046.16], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [344.82758621], Val: 10230521.115654645

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: solar

Wind: 1.0, Solar: 0.5

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [02:30<1:12:53, 150.82s/it]  7%|▋         | 2/30 [02:32<29:18, 62.81s/it]    10%|█         | 3/30 [02:33<15:36, 34.70s/it] 13%|█▎        | 4/30 [02:34<09:21, 21.58s/it] 17%|█▋        | 5/30 [02:35<05:55, 14.21s/it] 20%|██        | 6/30 [05:08<24:27, 61.14s/it] 23%|██▎       | 7/30 [05:10<16:05, 41.99s/it] 27%|██▋       | 8/30 [05:13<10:46, 29.38s/it] 30%|███       | 9/30 [05:15<07:23, 21.10s/it] 33%|███▎      | 10/30 [05:18<05:07, 15.38s/it] 37%|███▋      | 11/30 [07:52<18:16, 57.71s/it] 40%|████      | 12/30 [07:55<12:22, 41.27s/it] 43%|████▎     | 13/30 [07:59<08:27, 29.84s/it] 47%|████▋     | 14/30 [08:04<05:55, 22.21s/it] 50%|█████     | 15/30 [08:07<04:08, 16.56s/it] 53%|█████▎    | 16/30 [10:42<13:36, 58.30s/it] 57%|█████▋    | 17/30 [10:47<09:08, 42.19s/it] 60%|██████    | 18/30 [10:52<06:11, 30.98s/it] 63%|██████▎   | 19/30 [10:58<04:18, 23.51s/it] 67%|██████▋   | 20/30 [11:03<02:58, 17.89s/it] 70%|███████   | 21/30 [13:39<08:55, 59.53s/it] 73%|███████▎  | 22/30 [13:45<05:47, 43.42s/it] 77%|███████▋  | 23/30 [13:52<03:46, 32.32s/it] 80%|████████  | 24/30 [13:59<02:29, 24.95s/it] 83%|████████▎ | 25/30 [14:06<01:36, 19.31s/it] 87%|████████▋ | 26/30 [16:43<04:03, 60.88s/it] 90%|█████████ | 27/30 [16:50<02:13, 44.58s/it] 93%|█████████▎| 28/30 [16:57<01:06, 33.36s/it] 97%|█████████▋| 29/30 [17:05<00:25, 25.66s/it]100%|██████████| 30/30 [17:10<00:00, 19.42s/it]100%|██████████| 30/30 [17:10<00:00, 34.34s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[374]
 [374]
 [374]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 1030.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:33<05:06, 153.22s/it]100%|██████████| 3/3 [02:33<00:00, 39.78s/it] 100%|██████████| 3/3 [02:33<00:00, 51.12s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [374], Y: [7083627.16871153], extra_outputs: {}), UserFunctionResult(X: [374], Y: [7083627.16871153], extra_outputs: {}), UserFunctionResult(X: [374], Y: [7083627.16871153], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[ 999]
 [1000]
 [1000]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:55<05:51, 175.85s/it]100%|██████████| 3/3 [02:55<00:00, 58.62s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [999], Y: [7609029.47915054], extra_outputs: {}), UserFunctionResult(X: [1000], Y: [7610399.47540262], extra_outputs: {}), UserFunctionResult(X: [1000], Y: [7610399.47540262], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [374.], Val: 7083627.168711525

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: solar

Wind: 1.0, Solar: 0.7

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [02:30<1:12:52, 150.76s/it]  7%|▋         | 2/30 [02:32<29:23, 62.97s/it]    10%|█         | 3/30 [02:33<15:37, 34.73s/it] 13%|█▎        | 4/30 [02:35<09:23, 21.69s/it] 17%|█▋        | 5/30 [02:36<05:55, 14.23s/it] 20%|██        | 6/30 [05:07<24:21, 60.91s/it] 23%|██▎       | 7/30 [05:10<16:05, 42.00s/it] 27%|██▋       | 8/30 [05:13<10:46, 29.40s/it] 30%|███       | 9/30 [05:16<07:27, 21.32s/it] 33%|███▎      | 10/30 [05:18<05:08, 15.42s/it] 37%|███▋      | 11/30 [07:51<18:11, 57.44s/it] 40%|████      | 12/30 [07:56<12:26, 41.49s/it] 43%|████▎     | 13/30 [07:59<08:27, 29.84s/it] 47%|████▋     | 14/30 [08:05<05:59, 22.49s/it] 50%|█████     | 15/30 [08:08<04:10, 16.70s/it] 53%|█████▎    | 16/30 [10:42<13:34, 58.14s/it] 57%|█████▋    | 17/30 [10:49<09:14, 42.68s/it] 60%|██████    | 18/30 [10:54<06:14, 31.23s/it] 63%|██████▎   | 19/30 [11:00<04:23, 23.92s/it] 67%|██████▋   | 20/30 [11:05<03:01, 18.18s/it] 70%|███████   | 21/30 [13:40<08:51, 59.09s/it] 73%|███████▎  | 22/30 [13:48<05:51, 43.91s/it] 77%|███████▋  | 23/30 [13:54<03:47, 32.47s/it] 80%|████████  | 24/30 [14:02<02:31, 25.19s/it] 83%|████████▎ | 25/30 [14:08<01:37, 19.40s/it] 87%|████████▋ | 26/30 [16:43<04:00, 60.08s/it] 90%|█████████ | 27/30 [16:53<02:15, 45.12s/it] 93%|█████████▎| 28/30 [17:00<01:07, 33.54s/it] 97%|█████████▋| 29/30 [17:08<00:26, 26.01s/it]100%|██████████| 30/30 [17:13<00:00, 19.59s/it]100%|██████████| 30/30 [17:13<00:00, 34.45s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[ 655]
 [ 655]
 [1000]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 1034.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:43<05:26, 163.38s/it]100%|██████████| 3/3 [02:51<00:00, 45.48s/it] 100%|██████████| 3/3 [02:51<00:00, 57.27s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [655], Y: [5653108.14549612], extra_outputs: {}), UserFunctionResult(X: [655], Y: [5653108.14549612], extra_outputs: {}), UserFunctionResult(X: [1000], Y: [6043163.12090262], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[390]
 [390]
 [390]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:34<05:08, 154.23s/it] 67%|██████▋   | 2/3 [02:34<01:03, 63.75s/it] 100%|██████████| 3/3 [02:34<00:00, 51.55s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [390], Y: [5529660.23474207], extra_outputs: {}), UserFunctionResult(X: [390], Y: [5529660.23474207], extra_outputs: {}), UserFunctionResult(X: [390], Y: [5529660.23474207], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [390.], Val: 5529660.234742068

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: solar

Wind: 1.0, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [02:34<1:14:29, 154.13s/it]  7%|▋         | 2/30 [02:34<29:50, 63.95s/it]    10%|█         | 3/30 [02:36<15:57, 35.48s/it] 13%|█▎        | 4/30 [02:37<09:30, 21.93s/it] 17%|█▋        | 5/30 [02:39<06:04, 14.56s/it] 20%|██        | 6/30 [05:13<24:52, 62.18s/it] 23%|██▎       | 7/30 [05:15<16:16, 42.46s/it] 27%|██▋       | 8/30 [05:18<10:58, 29.95s/it] 30%|███       | 9/30 [05:21<07:30, 21.46s/it] 33%|███▎      | 10/30 [05:25<05:18, 15.94s/it] 37%|███▋      | 11/30 [08:00<18:30, 58.47s/it] 40%|████      | 12/30 [08:03<12:29, 41.66s/it] 43%|████▎     | 13/30 [08:07<08:35, 30.35s/it] 47%|████▋     | 14/30 [08:12<06:00, 22.56s/it] 50%|█████     | 15/30 [08:17<04:20, 17.34s/it] 53%|█████▎    | 16/30 [10:52<13:44, 58.93s/it] 57%|█████▋    | 17/30 [10:57<09:13, 42.61s/it] 60%|██████    | 18/30 [11:02<06:16, 31.35s/it] 63%|██████▎   | 19/30 [11:09<04:22, 23.85s/it] 67%|██████▋   | 20/30 [11:16<03:08, 18.84s/it] 70%|███████   | 21/30 [13:55<09:07, 60.84s/it] 73%|███████▎  | 22/30 [14:00<05:54, 44.34s/it] 77%|███████▋  | 23/30 [14:07<03:50, 32.93s/it] 80%|████████  | 24/30 [14:15<02:33, 25.57s/it] 83%|████████▎ | 25/30 [14:24<01:42, 20.56s/it] 87%|████████▋ | 26/30 [17:02<04:07, 61.91s/it] 90%|█████████ | 27/30 [17:10<02:16, 45.54s/it] 93%|█████████▎| 28/30 [17:16<01:07, 33.87s/it] 97%|█████████▋| 29/30 [17:25<00:26, 26.22s/it]100%|██████████| 30/30 [17:31<00:00, 20.37s/it]100%|██████████| 30/30 [17:31<00:00, 35.07s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[166]
 [ 86]
 [387]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 1052.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:27<04:54, 147.38s/it]100%|██████████| 3/3 [02:32<00:00, 40.18s/it] 100%|██████████| 3/3 [02:32<00:00, 50.90s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [166], Y: [3474662.15681581], extra_outputs: {}), UserFunctionResult(X: [86], Y: [3612764.98616365], extra_outputs: {}), UserFunctionResult(X: [387], Y: [3305302.87448632], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[422]
 [422]
 [422]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:37<05:14, 157.33s/it] 67%|██████▋   | 2/3 [02:37<01:04, 64.88s/it] 100%|██████████| 3/3 [02:37<00:00, 35.33s/it]100%|██████████| 3/3 [02:37<00:00, 52.55s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [422], Y: [3302734.75480291], extra_outputs: {}), UserFunctionResult(X: [422], Y: [3302734.75480291], extra_outputs: {}), UserFunctionResult(X: [422], Y: [3302734.75480291], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [422.], Val: 3302734.7548029106

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: solar

Wind: 1.0, Solar: 1.2

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [02:33<1:14:04, 153.27s/it]  7%|▋         | 2/30 [02:35<29:59, 64.27s/it]    10%|█         | 3/30 [02:36<15:55, 35.41s/it] 13%|█▎        | 4/30 [02:37<09:33, 22.07s/it] 17%|█▋        | 5/30 [02:39<06:03, 14.56s/it] 20%|██        | 6/30 [05:13<24:51, 62.14s/it] 23%|██▎       | 7/30 [05:16<16:22, 42.74s/it] 27%|██▋       | 8/30 [05:18<10:57, 29.88s/it] 30%|███       | 9/30 [05:22<07:33, 21.61s/it] 33%|███▎      | 10/30 [05:24<05:13, 15.69s/it] 37%|███▋      | 11/30 [08:00<18:31, 58.50s/it] 40%|████      | 12/30 [08:04<12:35, 41.97s/it] 43%|████▎     | 13/30 [08:07<08:34, 30.28s/it] 47%|████▋     | 14/30 [08:12<06:02, 22.63s/it] 50%|█████     | 15/30 [08:16<04:14, 16.94s/it] 53%|█████▎    | 16/30 [10:53<13:47, 59.10s/it] 57%|█████▋    | 17/30 [10:59<09:20, 43.14s/it] 60%|██████    | 18/30 [11:04<06:19, 31.60s/it] 63%|██████▎   | 19/30 [11:10<04:25, 24.11s/it] 67%|██████▋   | 20/30 [11:16<03:04, 18.43s/it] 70%|███████   | 21/30 [13:53<09:01, 60.19s/it] 73%|███████▎  | 22/30 [14:00<05:54, 44.33s/it] 77%|███████▋  | 23/30 [14:06<03:48, 32.70s/it] 80%|████████  | 24/30 [14:15<02:33, 25.52s/it] 83%|████████▎ | 25/30 [14:21<01:38, 19.68s/it] 87%|████████▋ | 26/30 [17:00<04:05, 61.37s/it] 90%|█████████ | 27/30 [17:08<02:16, 45.36s/it] 93%|█████████▎| 28/30 [17:14<01:07, 33.62s/it] 97%|█████████▋| 29/30 [17:24<00:26, 26.50s/it]100%|██████████| 30/30 [17:29<00:00, 20.04s/it]100%|██████████| 30/30 [17:29<00:00, 34.97s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[0]
 [0]
 [0]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 1049.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:21<04:42, 141.01s/it] 67%|██████▋   | 2/3 [02:21<00:58, 58.15s/it] 100%|██████████| 3/3 [02:21<00:00, 47.07s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [0], Y: [2461663.23], extra_outputs: {}), UserFunctionResult(X: [0], Y: [2461663.23], extra_outputs: {}), UserFunctionResult(X: [0], Y: [2461663.23], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[915]
 [851]
 [635]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:53<05:47, 173.59s/it]100%|██████████| 3/3 [02:53<00:00, 57.86s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [915], Y: [2305413.00149084], extra_outputs: {}), UserFunctionResult(X: [851], Y: [2230147.12886906], extra_outputs: {}), UserFunctionResult(X: [635], Y: [2035237.78095812], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 2
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[363]
 [ 66]
 [712]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:33<05:06, 153.44s/it]100%|██████████| 3/3 [02:41<00:00, 42.90s/it] 100%|██████████| 3/3 [02:41<00:00, 53.96s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [363], Y: [1959347.33644063], extra_outputs: {}), UserFunctionResult(X: [66], Y: [2305468.54562557], extra_outputs: {}), UserFunctionResult(X: [712], Y: [2095314.44285462], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 3
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[865]
 [299]
 [106]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:45<05:31, 165.54s/it]100%|██████████| 3/3 [02:45<00:00, 55.18s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [865], Y: [2245668.24639571], extra_outputs: {}), UserFunctionResult(X: [299], Y: [1985901.47581888], extra_outputs: {}), UserFunctionResult(X: [106], Y: [2226814.19770167], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 4
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[626]
 [824]
 [ 35]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:41<05:23, 161.73s/it] 67%|██████▋   | 2/3 [02:46<01:09, 69.29s/it] 100%|██████████| 3/3 [02:46<00:00, 55.44s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [626], Y: [2029336.901691], extra_outputs: {}), UserFunctionResult(X: [824], Y: [2201006.29156769], extra_outputs: {}), UserFunctionResult(X: [35], Y: [2375639.8188166], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped after 5 evaluations
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [413.79310345], Val: 1953520.6310357684

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: solar

Wind: 1.0, Solar: 1.7

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [02:31<1:13:06, 151.26s/it]  7%|▋         | 2/30 [02:32<29:26, 63.09s/it]    10%|█         | 3/30 [02:33<15:38, 34.74s/it] 13%|█▎        | 4/30 [02:34<09:20, 21.55s/it] 17%|█▋        | 5/30 [02:36<05:54, 14.17s/it] 20%|██        | 6/30 [05:08<24:30, 61.29s/it] 23%|██▎       | 7/30 [05:11<16:10, 42.20s/it] 27%|██▋       | 8/30 [05:13<10:48, 29.46s/it] 30%|███       | 9/30 [05:16<07:21, 21.04s/it] 33%|███▎      | 10/30 [05:19<05:08, 15.44s/it] 37%|███▋      | 11/30 [07:54<18:24, 58.12s/it] 40%|████      | 12/30 [07:58<12:29, 41.66s/it] 43%|████▎     | 13/30 [08:01<08:32, 30.14s/it] 47%|████▋     | 14/30 [08:05<05:54, 22.14s/it] 50%|█████     | 15/30 [08:09<04:10, 16.72s/it] 53%|█████▎    | 16/30 [10:45<13:38, 58.45s/it] 57%|█████▋    | 17/30 [10:50<09:11, 42.45s/it] 60%|██████    | 18/30 [10:55<06:13, 31.13s/it] 63%|██████▎   | 19/30 [11:00<04:16, 23.32s/it] 67%|██████▋   | 20/30 [11:05<03:00, 18.04s/it] 70%|███████   | 21/30 [13:42<08:56, 59.64s/it] 73%|███████▎  | 22/30 [13:48<05:49, 43.65s/it] 77%|███████▋  | 23/30 [13:54<03:46, 32.33s/it] 80%|████████  | 24/30 [14:01<02:27, 24.59s/it] 83%|████████▎ | 25/30 [14:08<01:36, 19.39s/it] 87%|████████▋ | 26/30 [16:47<04:04, 61.12s/it] 90%|█████████ | 27/30 [16:54<02:15, 45.02s/it] 93%|█████████▎| 28/30 [17:01<01:07, 33.53s/it] 97%|█████████▋| 29/30 [17:07<00:25, 25.49s/it]100%|██████████| 30/30 [17:13<00:00, 19.39s/it]100%|██████████| 30/30 [17:13<00:00, 34.44s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[ 69]
 [483]
 [414]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 1033.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:23<04:46, 143.11s/it] 67%|██████▋   | 2/3 [02:36<01:06, 66.52s/it] 100%|██████████| 3/3 [02:36<00:00, 52.01s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [69], Y: [-911092.76361873], extra_outputs: {}), UserFunctionResult(X: [483], Y: [-1185572.2128311], extra_outputs: {}), UserFunctionResult(X: [414], Y: [-1197220.74321236], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[379]
 [379]
 [379]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:34<05:08, 154.04s/it]100%|██████████| 3/3 [02:34<00:00, 51.35s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [379], Y: [-1196795.65252894], extra_outputs: {}), UserFunctionResult(X: [379], Y: [-1196795.65252894], extra_outputs: {}), UserFunctionResult(X: [379], Y: [-1196795.65252894], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [413.79310345], Val: -1197249.168464269

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: solar

Wind: 1.0, Solar: 2.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [02:31<1:13:16, 151.60s/it]  7%|▋         | 2/30 [02:32<29:28, 63.17s/it]    10%|█         | 3/30 [02:34<15:43, 34.94s/it] 13%|█▎        | 4/30 [02:35<09:23, 21.67s/it] 17%|█▋        | 5/30 [02:36<05:58, 14.34s/it] 20%|██        | 6/30 [05:09<24:28, 61.20s/it] 23%|██▎       | 7/30 [05:11<16:06, 42.03s/it] 27%|██▋       | 8/30 [05:14<10:49, 29.54s/it] 30%|███       | 9/30 [05:16<07:23, 21.10s/it] 33%|███▎      | 10/30 [05:19<05:10, 15.50s/it] 37%|███▋      | 11/30 [07:52<18:13, 57.55s/it] 40%|████      | 12/30 [07:56<12:23, 41.30s/it] 43%|████▎     | 13/30 [08:00<08:28, 29.93s/it] 47%|████▋     | 14/30 [08:04<05:53, 22.08s/it] 50%|█████     | 15/30 [08:09<04:11, 16.74s/it] 53%|█████▎    | 16/30 [10:42<13:32, 58.04s/it] 57%|█████▋    | 17/30 [10:48<09:08, 42.21s/it] 60%|██████    | 18/30 [10:53<06:13, 31.10s/it] 63%|██████▎   | 19/30 [10:59<04:19, 23.55s/it] 67%|██████▋   | 20/30 [11:05<03:03, 18.37s/it] 70%|███████   | 21/30 [13:41<08:54, 59.43s/it] 73%|███████▎  | 22/30 [13:47<05:49, 43.68s/it] 77%|███████▋  | 23/30 [13:54<03:47, 32.55s/it] 80%|████████  | 24/30 [14:01<02:29, 24.87s/it] 83%|████████▎ | 25/30 [14:08<01:38, 19.63s/it] 87%|████████▋ | 26/30 [16:44<04:01, 60.43s/it] 90%|█████████ | 27/30 [16:52<02:13, 44.66s/it] 93%|█████████▎| 28/30 [16:59<01:06, 33.48s/it] 97%|█████████▋| 29/30 [17:06<00:25, 25.52s/it]100%|██████████| 30/30 [17:12<00:00, 19.53s/it]100%|██████████| 30/30 [17:12<00:00, 34.41s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[382]
 [382]
 [382]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 1032.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:33<05:06, 153.22s/it] 67%|██████▋   | 2/3 [02:33<01:03, 63.26s/it] 100%|██████████| 3/3 [02:33<00:00, 51.18s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [382], Y: [-3036516.93827323], extra_outputs: {}), UserFunctionResult(X: [382], Y: [-3036516.93827323], extra_outputs: {}), UserFunctionResult(X: [382], Y: [-3036516.93827323], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[436]
 [435]
 [435]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:36<05:13, 156.98s/it]100%|██████████| 3/3 [02:36<00:00, 52.33s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [436], Y: [-3032098.46817043], extra_outputs: {}), UserFunctionResult(X: [435], Y: [-3032214.00842245], extra_outputs: {}), UserFunctionResult(X: [435], Y: [-3032214.00842245], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [382.], Val: -3036516.9382732306

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind

Wind: 0.1, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [02:31<1:13:07, 151.29s/it]  7%|▋         | 2/30 [02:32<29:19, 62.85s/it]    10%|█         | 3/30 [02:33<15:38, 34.74s/it] 13%|█▎        | 4/30 [02:34<09:21, 21.61s/it] 17%|█▋        | 5/30 [02:35<05:54, 14.17s/it] 20%|██        | 6/30 [05:09<24:33, 61.41s/it] 23%|██▎       | 7/30 [05:10<16:04, 41.95s/it] 27%|██▋       | 8/30 [05:13<10:46, 29.39s/it] 30%|███       | 9/30 [05:16<07:23, 21.12s/it] 33%|███▎      | 10/30 [05:18<05:07, 15.36s/it] 37%|███▋      | 11/30 [07:53<18:22, 58.00s/it] 40%|████      | 12/30 [07:56<12:20, 41.16s/it] 43%|████▎     | 13/30 [08:00<08:28, 29.93s/it] 47%|████▋     | 14/30 [08:04<05:55, 22.24s/it] 50%|█████     | 15/30 [08:08<04:10, 16.72s/it] 53%|█████▎    | 16/30 [10:45<13:42, 58.76s/it] 57%|█████▋    | 17/30 [10:48<09:08, 42.17s/it] 60%|██████    | 18/30 [10:53<06:12, 31.06s/it] 63%|██████▎   | 19/30 [10:59<04:17, 23.45s/it] 67%|██████▋   | 20/30 [11:05<03:00, 18.05s/it] 70%|███████   | 21/30 [13:42<08:59, 59.96s/it] 73%|███████▎  | 22/30 [13:47<05:46, 43.28s/it] 77%|███████▋  | 23/30 [13:53<03:45, 32.24s/it] 80%|████████  | 24/30 [14:00<02:28, 24.79s/it] 83%|████████▎ | 25/30 [14:07<01:36, 19.24s/it] 87%|████████▋ | 26/30 [16:47<04:06, 61.53s/it] 90%|█████████ | 27/30 [16:52<02:13, 44.59s/it] 93%|█████████▎| 28/30 [17:00<01:07, 33.53s/it] 97%|█████████▋| 29/30 [17:07<00:25, 25.60s/it]100%|██████████| 30/30 [17:12<00:00, 19.40s/it]100%|██████████| 30/30 [17:12<00:00, 34.41s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[286]
 [470]
 [607]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 1032.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:30<05:01, 150.86s/it] 67%|██████▋   | 2/3 [02:37<01:05, 65.80s/it] 100%|██████████| 3/3 [02:40<00:00, 37.28s/it]100%|██████████| 3/3 [02:40<00:00, 53.49s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [286], Y: [10373243.71904413], extra_outputs: {}), UserFunctionResult(X: [470], Y: [10376208.97539434], extra_outputs: {}), UserFunctionResult(X: [607], Y: [10454072.58140481], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[892]
 [ 45]
 [878]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:49<05:39, 169.85s/it]100%|██████████| 3/3 [02:49<00:00, 56.62s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [892], Y: [10752519.36169718], extra_outputs: {}), UserFunctionResult(X: [45], Y: [10653314.90233567], extra_outputs: {}), UserFunctionResult(X: [878], Y: [10734437.06317041], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 2
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[176]
 [882]
 [983]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:26<04:52, 146.49s/it] 67%|██████▋   | 2/3 [02:49<01:13, 73.95s/it] 100%|██████████| 3/3 [02:51<00:00, 41.24s/it]100%|██████████| 3/3 [02:51<00:00, 57.33s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [176], Y: [10456177.84983477], extra_outputs: {}), UserFunctionResult(X: [882], Y: [10739603.43417815], extra_outputs: {}), UserFunctionResult(X: [983], Y: [10877798.8256202], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 3
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[870]
 [692]
 [252]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:47<05:35, 167.85s/it]100%|██████████| 3/3 [02:47<00:00, 55.95s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [870], Y: [10724383.08915498], extra_outputs: {}), UserFunctionResult(X: [692], Y: [10529081.65731659], extra_outputs: {}), UserFunctionResult(X: [252], Y: [10391015.69697928], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 4
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[304]
 [818]
 [196]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:31<05:02, 151.11s/it] 67%|██████▋   | 2/3 [02:43<01:09, 69.39s/it] 100%|██████████| 3/3 [02:43<00:00, 54.43s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [304], Y: [10366089.25357854], extra_outputs: {}), UserFunctionResult(X: [818], Y: [10661968.03355622], extra_outputs: {}), UserFunctionResult(X: [196], Y: [10435176.68087286], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped after 5 evaluations
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [344.82758621], Val: 10358558.32115467

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind

Wind: 0.5, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [02:30<1:12:57, 150.93s/it]  7%|▋         | 2/30 [02:32<29:21, 62.89s/it]    10%|█         | 3/30 [02:33<15:40, 34.85s/it] 13%|█▎        | 4/30 [02:34<09:20, 21.56s/it] 17%|█▋        | 5/30 [02:36<05:56, 14.25s/it] 20%|██        | 6/30 [05:08<24:29, 61.25s/it] 23%|██▎       | 7/30 [05:11<16:07, 42.07s/it] 27%|██▋       | 8/30 [05:14<10:51, 29.62s/it] 30%|███       | 9/30 [05:16<07:23, 21.11s/it] 33%|███▎      | 10/30 [05:19<05:08, 15.43s/it] 37%|███▋      | 11/30 [07:53<18:17, 57.76s/it] 40%|████      | 12/30 [07:56<12:23, 41.31s/it] 43%|████▎     | 13/30 [08:01<08:32, 30.17s/it] 47%|████▋     | 14/30 [08:04<05:54, 22.18s/it] 50%|█████     | 15/30 [08:08<04:09, 16.62s/it] 53%|█████▎    | 16/30 [10:43<13:36, 58.30s/it] 57%|█████▋    | 17/30 [10:49<09:11, 42.40s/it] 60%|██████    | 18/30 [10:54<06:15, 31.31s/it] 63%|██████▎   | 19/30 [10:59<04:18, 23.46s/it] 67%|██████▋   | 20/30 [11:05<02:59, 17.98s/it] 70%|███████   | 21/30 [13:41<08:55, 59.45s/it] 73%|███████▎  | 22/30 [13:48<05:49, 43.71s/it] 77%|███████▋  | 23/30 [13:55<03:48, 32.66s/it] 80%|████████  | 24/30 [14:01<02:28, 24.80s/it] 83%|████████▎ | 25/30 [14:08<01:36, 19.32s/it] 87%|████████▋ | 26/30 [16:45<04:03, 60.79s/it] 90%|█████████ | 27/30 [16:53<02:14, 44.96s/it] 93%|█████████▎| 28/30 [17:01<01:07, 33.74s/it] 97%|█████████▋| 29/30 [17:08<00:25, 25.67s/it]100%|██████████| 30/30 [17:13<00:00, 19.51s/it]100%|██████████| 30/30 [17:13<00:00, 34.44s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[396]
 [396]
 [396]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 1033.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:34<05:08, 154.11s/it]100%|██████████| 3/3 [02:34<00:00, 51.39s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [396], Y: [7087011.45225346], extra_outputs: {}), UserFunctionResult(X: [396], Y: [7087011.45225346], extra_outputs: {}), UserFunctionResult(X: [396], Y: [7087011.45225346], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[0]
 [0]
 [0]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:20<04:41, 140.61s/it]100%|██████████| 3/3 [02:20<00:00, 46.87s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [0], Y: [7536860.78999999], extra_outputs: {}), UserFunctionResult(X: [0], Y: [7536860.78999999], extra_outputs: {}), UserFunctionResult(X: [0], Y: [7536860.78999999], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [379.31034483], Val: 7086449.819471026

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind

Wind: 0.7, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [02:30<1:12:43, 150.45s/it]  7%|▋         | 2/30 [02:32<29:22, 62.94s/it]    10%|█         | 3/30 [02:33<15:39, 34.80s/it] 13%|█▎        | 4/30 [02:34<09:23, 21.66s/it] 17%|█▋        | 5/30 [02:35<05:54, 14.19s/it] 20%|██        | 6/30 [05:07<24:25, 61.05s/it] 23%|██▎       | 7/30 [05:11<16:09, 42.15s/it] 27%|██▋       | 8/30 [05:13<10:51, 29.60s/it] 30%|███       | 9/30 [05:16<07:26, 21.26s/it] 33%|███▎      | 10/30 [05:18<05:06, 15.34s/it] 37%|███▋      | 11/30 [07:52<18:13, 57.53s/it] 40%|████      | 12/30 [07:57<12:27, 41.53s/it] 43%|████▎     | 13/30 [08:01<08:32, 30.16s/it] 47%|████▋     | 14/30 [08:05<05:57, 22.36s/it] 50%|█████     | 15/30 [08:08<04:08, 16.58s/it] 53%|█████▎    | 16/30 [10:42<13:32, 58.02s/it] 57%|█████▋    | 17/30 [10:49<09:14, 42.65s/it] 60%|██████    | 18/30 [10:55<06:17, 31.45s/it] 63%|██████▎   | 19/30 [11:00<04:21, 23.75s/it] 67%|██████▋   | 20/30 [11:05<02:59, 17.94s/it] 70%|███████   | 21/30 [13:40<08:52, 59.14s/it] 73%|███████▎  | 22/30 [13:49<05:51, 43.96s/it] 77%|███████▋  | 23/30 [13:55<03:49, 32.78s/it] 80%|████████  | 24/30 [14:03<02:30, 25.13s/it] 83%|████████▎ | 25/30 [14:08<01:36, 19.29s/it] 87%|████████▋ | 26/30 [16:45<04:02, 60.59s/it] 90%|█████████ | 27/30 [16:55<02:16, 45.43s/it] 93%|█████████▎| 28/30 [17:03<01:08, 34.11s/it] 97%|█████████▋| 29/30 [17:10<00:26, 26.08s/it]100%|██████████| 30/30 [17:14<00:00, 19.49s/it]100%|██████████| 30/30 [17:14<00:00, 34.50s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[655]
 [621]
 [621]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 1035.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:43<05:27, 163.54s/it]100%|██████████| 3/3 [02:43<00:00, 54.51s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [655], Y: [5612349.49999611], extra_outputs: {}), UserFunctionResult(X: [621], Y: [5587295.74393152], extra_outputs: {}), UserFunctionResult(X: [621], Y: [5587295.74393152], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[411]
 [411]
 [411]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:35<05:10, 155.32s/it]100%|██████████| 3/3 [02:35<00:00, 51.80s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [411], Y: [5512697.24403199], extra_outputs: {}), UserFunctionResult(X: [411], Y: [5512697.24403199], extra_outputs: {}), UserFunctionResult(X: [411], Y: [5512697.24403199], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [413.79310345], Val: 5512684.402535774

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind

Wind: 1.0, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [02:30<1:12:42, 150.43s/it]  7%|▋         | 2/30 [02:31<29:12, 62.58s/it]    10%|█         | 3/30 [02:33<15:40, 34.82s/it] 13%|█▎        | 4/30 [02:34<09:24, 21.70s/it] 17%|█▋        | 5/30 [02:35<05:55, 14.23s/it] 20%|██        | 6/30 [05:07<24:25, 61.05s/it] 23%|██▎       | 7/30 [05:10<16:01, 41.81s/it] 27%|██▋       | 8/30 [05:13<10:51, 29.63s/it] 30%|███       | 9/30 [05:16<07:27, 21.31s/it] 33%|███▎      | 10/30 [05:19<05:09, 15.48s/it] 37%|███▋      | 11/30 [07:52<18:13, 57.57s/it] 40%|████      | 12/30 [07:55<12:20, 41.14s/it] 43%|████▎     | 13/30 [08:00<08:33, 30.20s/it] 47%|████▋     | 14/30 [08:05<05:59, 22.45s/it] 50%|█████     | 15/30 [08:08<04:11, 16.75s/it] 53%|█████▎    | 16/30 [10:42<13:33, 58.10s/it] 57%|█████▋    | 17/30 [10:47<09:05, 41.93s/it] 60%|██████    | 18/30 [10:54<06:20, 31.67s/it] 63%|██████▎   | 19/30 [11:00<04:22, 23.86s/it] 67%|██████▋   | 20/30 [11:06<03:05, 18.57s/it] 70%|███████   | 21/30 [13:43<08:59, 59.98s/it] 73%|███████▎  | 22/30 [13:48<05:48, 43.51s/it] 77%|███████▋  | 23/30 [13:57<03:52, 33.27s/it] 80%|████████  | 24/30 [14:04<02:32, 25.43s/it] 83%|████████▎ | 25/30 [14:11<01:39, 19.82s/it] 87%|████████▋ | 26/30 [16:50<04:05, 61.45s/it] 90%|█████████ | 27/30 [16:56<02:14, 44.77s/it] 93%|█████████▎| 28/30 [17:06<01:09, 34.57s/it] 97%|█████████▋| 29/30 [17:14<00:26, 26.44s/it]100%|██████████| 30/30 [17:19<00:00, 19.91s/it]100%|██████████| 30/30 [17:19<00:00, 34.64s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[1000]
 [   0]
 [   0]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 1039.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:45<05:31, 165.52s/it]100%|██████████| 3/3 [02:45<00:00, 55.17s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [1000], Y: [3756028.85240258], extra_outputs: {}), UserFunctionResult(X: [0], Y: [3814532.99], extra_outputs: {}), UserFunctionResult(X: [0], Y: [3814532.99], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[424]
 [424]
 [424]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:36<05:12, 156.24s/it]100%|██████████| 3/3 [02:36<00:00, 52.08s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [424], Y: [3302687.06730667], extra_outputs: {}), UserFunctionResult(X: [424], Y: [3302687.06730667], extra_outputs: {}), UserFunctionResult(X: [424], Y: [3302687.06730667], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [424.], Val: 3302687.0673066685

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind

Wind: 1.2, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [02:31<1:13:25, 151.90s/it]  7%|▋         | 2/30 [02:32<29:26, 63.09s/it]    10%|█         | 3/30 [02:34<15:51, 35.24s/it] 13%|█▎        | 4/30 [02:35<09:24, 21.72s/it] 17%|█▋        | 5/30 [02:37<05:59, 14.37s/it] 20%|██        | 6/30 [05:09<24:32, 61.36s/it] 23%|██▎       | 7/30 [05:11<16:05, 41.96s/it] 27%|██▋       | 8/30 [05:15<10:56, 29.84s/it] 30%|███       | 9/30 [05:17<07:24, 21.15s/it] 33%|███▎      | 10/30 [05:20<05:10, 15.52s/it] 37%|███▋      | 11/30 [07:54<18:17, 57.75s/it] 40%|████      | 12/30 [07:57<12:20, 41.15s/it] 43%|████▎     | 13/30 [08:03<08:36, 30.40s/it] 47%|████▋     | 14/30 [08:05<05:53, 22.10s/it] 50%|█████     | 15/30 [08:10<04:12, 16.81s/it] 53%|█████▎    | 16/30 [10:45<13:38, 58.48s/it] 57%|█████▋    | 17/30 [10:50<09:08, 42.23s/it] 60%|██████    | 18/30 [10:57<06:20, 31.72s/it] 63%|██████▎   | 19/30 [11:01<04:17, 23.42s/it] 67%|██████▋   | 20/30 [11:08<03:03, 18.34s/it] 70%|███████   | 21/30 [13:43<08:56, 59.57s/it] 73%|███████▎  | 22/30 [13:49<05:47, 43.38s/it] 77%|███████▋  | 23/30 [13:58<03:51, 33.01s/it] 80%|████████  | 24/30 [14:03<02:28, 24.67s/it] 83%|████████▎ | 25/30 [14:11<01:38, 19.73s/it] 87%|████████▋ | 26/30 [16:48<04:03, 60.77s/it] 90%|█████████ | 27/30 [16:54<02:13, 44.54s/it] 93%|█████████▎| 28/30 [17:04<01:08, 34.11s/it] 97%|█████████▋| 29/30 [17:09<00:25, 25.32s/it]100%|██████████| 30/30 [17:15<00:00, 19.69s/it]100%|██████████| 30/30 [17:15<00:00, 34.53s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[670]
 [610]
 [943]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 1036.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:48<05:36, 168.22s/it]100%|██████████| 3/3 [02:54<00:00, 46.10s/it] 100%|██████████| 3/3 [02:54<00:00, 58.31s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [670], Y: [2059172.49227471], extra_outputs: {}), UserFunctionResult(X: [610], Y: [2014301.49466055], extra_outputs: {}), UserFunctionResult(X: [943], Y: [2348427.28554409], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[887]
 [224]
 [112]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:52<05:45, 172.77s/it]100%|██████████| 3/3 [02:52<00:00, 57.59s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [887], Y: [2277735.85343756], extra_outputs: {}), UserFunctionResult(X: [224], Y: [2044177.57092619], extra_outputs: {}), UserFunctionResult(X: [112], Y: [2203439.16771309], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 2
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[985]
 [178]
 [645]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:56<05:53, 176.96s/it]100%|██████████| 3/3 [02:56<00:00, 58.99s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [985], Y: [2402987.795124], extra_outputs: {}), UserFunctionResult(X: [178], Y: [2100121.98733867], extra_outputs: {}), UserFunctionResult(X: [645], Y: [2039122.33097715], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 3
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[ 94]
 [282]
 [471]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:29<04:58, 149.45s/it] 67%|██████▋   | 2/3 [02:39<01:07, 67.59s/it] 100%|██████████| 3/3 [02:47<00:00, 40.23s/it]100%|██████████| 3/3 [02:47<00:00, 55.81s/it]
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [94], Y: [2236181.84367885], extra_outputs: {}), UserFunctionResult(X: [282], Y: [1994890.09503654], extra_outputs: {}), UserFunctionResult(X: [471], Y: [1954178.63264611], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 4
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[587]
 [399]
 [216]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:45<05:31, 165.92s/it]100%|██████████| 3/3 [02:45<00:00, 55.31s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [587], Y: [1999456.68036679], extra_outputs: {}), UserFunctionResult(X: [399], Y: [1952471.76300911], extra_outputs: {}), UserFunctionResult(X: [216], Y: [2052766.20691097], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped after 5 evaluations
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [448.27586207], Val: 1951338.2653523518

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind

Wind: 1.7, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [02:34<1:14:41, 154.55s/it]  7%|▋         | 2/30 [02:35<30:04, 64.45s/it]    10%|█         | 3/30 [02:37<15:59, 35.54s/it] 13%|█▎        | 4/30 [02:38<09:34, 22.11s/it] 17%|█▋        | 5/30 [02:39<06:04, 14.58s/it] 20%|██        | 6/30 [05:16<25:09, 62.91s/it] 23%|██▎       | 7/30 [05:19<16:37, 43.36s/it] 27%|██▋       | 8/30 [05:21<11:05, 30.27s/it] 30%|███       | 9/30 [05:25<07:37, 21.79s/it] 33%|███▎      | 10/30 [05:27<05:17, 15.88s/it] 37%|███▋      | 11/30 [08:02<18:31, 58.51s/it] 40%|████      | 12/30 [08:07<12:38, 42.14s/it] 43%|████▎     | 13/30 [08:10<08:34, 30.28s/it] 47%|████▋     | 14/30 [08:15<05:59, 22.49s/it] 50%|█████     | 15/30 [08:19<04:13, 16.93s/it] 53%|█████▎    | 16/30 [10:54<13:39, 58.54s/it] 57%|█████▋    | 17/30 [11:00<09:17, 42.85s/it] 60%|██████    | 18/30 [11:04<06:13, 31.13s/it] 63%|██████▎   | 19/30 [11:10<04:19, 23.58s/it] 67%|██████▋   | 20/30 [11:16<03:02, 18.21s/it] 70%|███████   | 21/30 [13:52<08:56, 59.64s/it] 73%|███████▎  | 22/30 [14:00<05:53, 44.16s/it] 77%|███████▋  | 23/30 [14:05<03:46, 32.30s/it] 80%|████████  | 24/30 [14:12<02:29, 24.95s/it] 83%|████████▎ | 25/30 [14:19<01:37, 19.57s/it] 87%|████████▋ | 26/30 [16:56<04:02, 60.59s/it] 90%|█████████ | 27/30 [17:05<02:15, 45.32s/it] 93%|█████████▎| 28/30 [17:11<01:07, 33.53s/it] 97%|█████████▋| 29/30 [17:20<00:25, 25.92s/it]100%|██████████| 30/30 [17:25<00:00, 19.70s/it]100%|██████████| 30/30 [17:25<00:00, 34.84s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[392]
 [392]
 [392]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 1045.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:39<05:19, 159.63s/it]100%|██████████| 3/3 [02:39<00:00, 53.22s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [392], Y: [-1277451.20525418], extra_outputs: {}), UserFunctionResult(X: [392], Y: [-1277451.20525418], extra_outputs: {}), UserFunctionResult(X: [392], Y: [-1277451.20525418], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[393]
 [393]
 [393]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:42<05:24, 162.14s/it]100%|██████████| 3/3 [02:42<00:00, 54.05s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [393], Y: [-1277422.78000232], extra_outputs: {}), UserFunctionResult(X: [393], Y: [-1277422.78000232], extra_outputs: {}), UserFunctionResult(X: [393], Y: [-1277422.78000232], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [392.], Val: -1277451.2052541818

Network Param Scenario: Baseline (20 % Discount), Surge Scenario: wind

Wind: 2.0, Solar: 1.0

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [02:35<1:15:02, 155.26s/it]  7%|▋         | 2/30 [02:36<30:07, 64.57s/it]    10%|█         | 3/30 [02:37<16:01, 35.61s/it] 13%|█▎        | 4/30 [02:38<09:35, 22.13s/it] 17%|█▋        | 5/30 [02:40<06:05, 14.64s/it] 20%|██        | 6/30 [05:16<25:08, 62.87s/it] 23%|██▎       | 7/30 [05:19<16:30, 43.06s/it] 27%|██▋       | 8/30 [05:21<11:02, 30.11s/it] 30%|███       | 9/30 [05:24<07:32, 21.56s/it] 33%|███▎      | 10/30 [05:27<05:15, 15.76s/it] 37%|███▋      | 11/30 [08:04<18:41, 59.01s/it] 40%|████      | 12/30 [08:07<12:36, 42.04s/it] 43%|████▎     | 13/30 [08:11<08:40, 30.62s/it] 47%|████▋     | 14/30 [08:16<06:03, 22.69s/it] 50%|█████     | 15/30 [08:20<04:18, 17.21s/it] 53%|█████▎    | 16/30 [11:02<14:12, 60.92s/it] 57%|█████▋    | 17/30 [11:07<09:30, 43.88s/it] 60%|██████    | 18/30 [11:12<06:28, 32.35s/it] 63%|██████▎   | 19/30 [11:18<04:27, 24.30s/it] 67%|██████▋   | 20/30 [11:24<03:10, 19.01s/it] 70%|███████   | 21/30 [14:06<09:15, 61.73s/it] 73%|███████▎  | 22/30 [14:11<05:58, 44.82s/it] 77%|███████▋  | 23/30 [14:18<03:54, 33.44s/it] 80%|████████  | 24/30 [14:25<02:32, 25.40s/it] 83%|████████▎ | 25/30 [14:33<01:40, 20.20s/it] 87%|████████▋ | 26/30 [17:15<04:10, 62.71s/it] 90%|█████████ | 27/30 [17:21<02:17, 45.67s/it] 93%|█████████▎| 28/30 [17:28<01:08, 34.28s/it] 97%|█████████▋| 29/30 [17:36<00:26, 26.34s/it]100%|██████████| 30/30 [17:43<00:00, 20.58s/it]100%|██████████| 30/30 [17:43<00:00, 35.46s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[1000]
 [ 362]
 [1000]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 1064.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:58<05:56, 178.35s/it]100%|██████████| 3/3 [02:58<00:00, 59.46s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [1000], Y: [-2643500.74709738], extra_outputs: {}), UserFunctionResult(X: [362], Y: [-3179003.33131131], extra_outputs: {}), UserFunctionResult(X: [1000], Y: [-2643500.74709738], extra_outputs: {})]
INFO:emukit.core.loop.outer_loop:Iteration 1
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[380]
 [380]
 [380]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [02:37<05:14, 157.43s/it]100%|██████████| 3/3 [02:37<00:00, 52.48s/it] 
DEBUG:emukit.core.loop.outer_loop:User function returned: [UserFunctionResult(X: [380], Y: [-3179580.61427693], extra_outputs: {}), UserFunctionResult(X: [380], Y: [-3179580.61427693], extra_outputs: {}), UserFunctionResult(X: [380], Y: [-3179580.61427693], extra_outputs: {})]
INFO:emukit.core.loop.stopping_conditions:Stopped as consecutive evaluations are within 0.01
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.loop.outer_loop:Finished outer loop

successfully ran loop


Best: [380.], Val: -3179580.6142769293

Network Param Scenario: 33 % Discount, Surge Scenario: solar

Wind: 1.0, Solar: 0.1

[[   0.        ]
 [  34.48275862]
 [  68.96551724]
 [ 103.44827586]
 [ 137.93103448]
 [ 172.4137931 ]
 [ 206.89655172]
 [ 241.37931034]
 [ 275.86206897]
 [ 310.34482759]
 [ 344.82758621]
 [ 379.31034483]
 [ 413.79310345]
 [ 448.27586207]
 [ 482.75862069]
 [ 517.24137931]
 [ 551.72413793]
 [ 586.20689655]
 [ 620.68965517]
 [ 655.17241379]
 [ 689.65517241]
 [ 724.13793103]
 [ 758.62068966]
 [ 793.10344828]
 [ 827.5862069 ]
 [ 862.06896552]
 [ 896.55172414]
 [ 931.03448276]
 [ 965.51724138]
 [1000.        ]]
  0%|          | 0/30 [00:00<?, ?it/s]  3%|▎         | 1/30 [02:35<1:15:19, 155.86s/it]  7%|▋         | 2/30 [02:37<30:22, 65.09s/it]    10%|█         | 3/30 [02:38<16:12, 36.02s/it] 13%|█▎        | 4/30 [02:39<09:36, 22.16s/it] 17%|█▋        | 5/30 [02:41<06:09, 14.78s/it] 20%|██        | 6/30 [05:18<25:17, 63.24s/it] 23%|██▎       | 7/30 [05:21<16:40, 43.50s/it] 27%|██▋       | 8/30 [05:24<11:13, 30.61s/it] 30%|███       | 9/30 [05:26<07:33, 21.60s/it] 33%|███▎      | 10/30 [05:30<05:21, 16.09s/it] 37%|███▋      | 11/30 [08:08<18:54, 59.69s/it] 40%|████      | 12/30 [08:12<12:50, 42.82s/it] 43%|████▎     | 13/30 [08:17<08:51, 31.26s/it] 47%|████▋     | 14/30 [08:20<06:01, 22.59s/it] 50%|█████     | 15/30 [08:26<04:23, 17.54s/it] 53%|█████▎    | 16/30 [11:05<14:04, 60.35s/it] 57%|█████▋    | 17/30 [11:11<09:32, 44.05s/it] 60%|██████    | 18/30 [11:17<06:31, 32.63s/it] 63%|██████▎   | 19/30 [11:21<04:23, 23.97s/it] 67%|██████▋   | 20/30 [11:29<03:12, 19.24s/it] 70%|███████   | 21/30 [14:12<09:20, 62.28s/it] 73%|███████▎  | 22/30 [14:20<06:07, 45.88s/it] 77%|███████▋  | 23/30 [14:27<04:00, 34.29s/it] 80%|████████  | 24/30 [14:32<02:32, 25.49s/it] 83%|████████▎ | 25/30 [14:42<01:44, 20.84s/it] 87%|████████▋ | 26/30 [17:23<04:11, 62.81s/it] 90%|█████████ | 27/30 [17:32<02:19, 46.63s/it] 93%|█████████▎| 28/30 [17:40<01:10, 35.02s/it] 97%|█████████▋| 29/30 [17:44<00:25, 25.91s/it]100%|██████████| 30/30 [17:52<00:00, 20.49s/it]100%|██████████| 30/30 [17:52<00:00, 35.75s/it]
INFO:GP:initializing Y
INFO:GP:initializing inference method
INFO:GP:adding kernel and likelihood as parameters
INFO:emukit.bayesian_optimization.loops.bayesian_optimization_loop:Batch size is 3, using LocalPenalizationPointCalculator
INFO:emukit.core.loop.outer_loop:Starting outer loop
INFO:emukit.core.loop.outer_loop:Iteration 0
INFO:emukit.core.loop.model_updaters:Updating parameters of the model
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
INFO:emukit.core.optimization.gradient_acquisition_optimizer:Starting gradient-based optimization of acquisition function <class 'emukit.core.acquisition.acquisition.Sum'>
DEBUG:emukit.core.loop.outer_loop:Next suggested point(s): [[1000]
 [1000]
 [1000]]
INFO:emukit.core.loop.user_function:Evaluating user function for 3 point(s)
Getting 30 initial simulation points took 1073.0 seconds

CURRENT ATTEMPT #0

okay to optimize
  0%|          | 0/3 [00:00<?, ?it/s]